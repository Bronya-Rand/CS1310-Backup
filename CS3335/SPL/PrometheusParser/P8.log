Page   1  P8.hoyo

    LC  Object    Line  Source Line
------  --------  ----  -------------------------------------------------------------
0X0000               1  ;--------------------------------------------------------------
0X0000               2  ; P8.stm
0X0000               3  ;--------------------------------------------------------------
0X0000               4  ; SVC numbers
0X0000               5  SVC_DONOTHING          EQU       0D0                  ; force context switch
0X0000               6  SVC_TERMINATE          EQU       0D1
0X0000               7  SVC_READ_INTEGER       EQU       0D10
0X0000               8  SVC_WRITE_INTEGER      EQU       0D11
0X0000               9  SVC_READ_FLOAT         EQU       0D20
0X0000              10  SVC_WRITE_FLOAT        EQU       0D21
0X0000              11  SVC_READ_BOOLEAN       EQU       0D30
0X0000              12  SVC_WRITE_BOOLEAN      EQU       0D31
0X0000              13  SVC_READ_CHARACTER     EQU       0D40
0X0000              14  SVC_WRITE_CHARACTER    EQU       0D41
0X0000              15  SVC_WRITE_ENDL         EQU       0D42
0X0000              16  SVC_READ_STRING        EQU       0D50
0X0000              17  SVC_WRITE_STRING       EQU       0D51
0X0000              18  SVC_INITIALIZE_HEAP    EQU       0D90
0X0000              19  SVC_ALLOCATE_BLOCK     EQU       0D91
0X0000              20  SVC_DEALLOCATE_BLOCK   EQU       0D92
0X0000              21  
0X0000              22                         ORG       0X0000
0X0000              23  
0X0000  800003      24                         JMP       PROGRAMMAIN
0X0003              25  ;    1 # P8.honkai
0X0003              26  ;    2 # Weiss Del Carmen
0X0003              27  ;    3 # :RaidenScream:
0X0003              28  ;    4 
0X0003              29  ;    5 Luna initialX: Bronya := 1 >>
0X0003              30  ;    6 
0X0003              31  ;    7 Veliona i: Bronya >>
0X0003              32  ;    8 
0X0003              33  ;    9 Herrscher
0X0003              34  ;   10    Luna initialY: Bronya := 3 >>
0X0003              35  ; **** =========
0X0003              36  ; **** PROGRAM module (   9)
0X0003              37  ; **** =========
0X0003              38  PROGRAMMAIN            EQU       *
0X0003  0100FFFE    39                         PUSH      #RUNTIMESTACK        ; set SP
0X0007  0A          40                         POPSP     
0X0008  02010524    41                         PUSHA     STATICDATA           ; set SB
0X000C  0C          42                         POPSB     
0X000D  010006AE    43                         PUSH      #HEAPBASE            ; initialize heap
0X0011  01001000    44                         PUSH      #HEAPSIZE
0X0015  FF005A      45                         SVC       #SVC_INITIALIZE_HEAP
0X0018  A0002C      46                         CALL      PROGRAMBODY0010
0X001B  020A0002    47                         PUSHA     SB:0D2
0X001F  FF0033      48                         SVC       #SVC_WRITE_STRING
0X0022  FF002A      49                         SVC       #SVC_WRITE_ENDL
0X0025  01000000    50                         PUSH      #0D0                 ; terminate with status = 0
0X0029  FF0001      51                         SVC       #SVC_TERMINATE
0X002C              52  
0X002C              53  PROGRAMBODY0010        EQU       *
0X002C              54  ;   11 
0X002C              55  ;   12    Veliona n: Bronya,x: Bronya,y: Bronya >>
0X002C              56  ;   13 
Page   2  P8.hoyo

    LC  Object    Line  Source Line
------  --------  ----  -------------------------------------------------------------
0X002C              57  ;   14    Provide "n? " n >>
0X002C              58  ; **** INPUT statement (  14)
0X002C              59  ;   15 
0X002C              60  ;   16    Speak "For-loop (1)",EndL >>
0X002C  020A0022    61                         PUSHA     SB:0D34
0X0030  FF0033      62                         SVC       #SVC_WRITE_STRING
0X0033  020A001F    63                         PUSHA     SB:0D31
0X0037  FF000A      64                         SVC       #SVC_READ_INTEGER
0X003A  03050001    65                         POP       @SP:0D1
0X003E  040001      66                         DISCARD   #0D1
0X0041              67  ; **** PRINT statement (  16)
0X0041  020A0027    68                         PUSHA     SB:0D39
0X0045  FF0033      69                         SVC       #SVC_WRITE_STRING
0X0048              70  ;   17    x := initialX >> y := initialY >>
0X0048  FF002A      71                         SVC       #SVC_WRITE_ENDL
0X004B              72  ; **** assignment statement (  17)
0X004B  020A0020    73                         PUSHA     SB:0D32
0X004F  010A0000    74                         PUSH      SB:0D0
0X0053  06          75                         MAKEDUP   
0X0054  03050002    76                         POP       @SP:0D2
0X0058  05          77                         SWAP      
0X0059  040001      78                         DISCARD   #0D1
0X005C  040001      79                         DISCARD   #0D1
0X005F              80  ; **** assignment statement (  17)
0X005F  020A0021    81                         PUSHA     SB:0D33
0X0063              82  ;   18    For i := 1 Towards n Account 1
0X0063  010A001E    83                         PUSH      SB:0D30
0X0067  06          84                         MAKEDUP   
0X0068  03050002    85                         POP       @SP:0D2
0X006C  05          86                         SWAP      
0X006D  040001      87                         DISCARD   #0D1
0X0070  040001      88                         DISCARD   #0D1
0X0073              89  ; **** FOR statement (  18)
0X0073  020A0001    90                         PUSHA     SB:0D1
0X0077  01000001    91                         PUSH      #0D1
0X007B              92  ;   19       Speak i,": " >>
0X007B  03050001    93                         POP       @SP:0D1
0X007F  010A001F    94                         PUSH      SB:0D31
0X0083  01000001    95                         PUSH      #0D1
0X0087  72          96                         SETNZPI   
0X0088  8A0096      97                         JMPNZ     D0020
0X008B  01000013    98                         PUSH      #0D19
0X008F  01000002    99                         PUSH      #0D2
0X0093  800503     100                         JMP       HANDLERUNTIMEERROR
0X0096  72         101  D0020                  SETNZPI   
0X0097  8700A8     102                         JMPN      L0030
0X009A  05         103                         SWAP      
0X009B  06         104                         MAKEDUP   
0X009C  01050003   105                         PUSH      @SP:0D3
0X00A0  05         106                         SWAP      
0X00A1  70         107                         CMPI      
0X00A2  8400B6     108                         JMPLE     C0040
0X00A5  8001AF     109                         JMP       E0050
0X00A8  05         110  L0030                  SWAP      
0X00A9  06         111                         MAKEDUP   
0X00AA  01050003   112                         PUSH      @SP:0D3
Page   3  P8.hoyo

    LC  Object    Line  Source Line
------  --------  ----  -------------------------------------------------------------
0X00AE  05         113                         SWAP      
0X00AF  70         114                         CMPI      
0X00B0  8600B6     115                         JMPGE     C0040
0X00B3  8001AF     116                         JMP       E0050
0X00B6             117  C0040                  EQU       *
0X00B6             118  ; **** PRINT statement (  19)
0X00B6  010A0001   119                         PUSH      SB:0D1
0X00BA             120  ;   20       If   ( x < y ) Execute
0X00BA  FF000B     121                         SVC       #SVC_WRITE_INTEGER
0X00BD  020A0035   122                         PUSHA     SB:0D53
0X00C1  FF0033     123                         SVC       #SVC_WRITE_STRING
0X00C4             124  ; **** IF statement (  20)
0X00C4  010A0020   125                         PUSH      SB:0D32
0X00C8             126  ;   21          Speak x," < ",y,EndL >>
0X00C8  010A0021   127                         PUSH      SB:0D33
0X00CC  70         128                         CMPI      
0X00CD  8100D7     129                         JMPL      T0060
0X00D0  01000000   130                         PUSH      #0X0000
0X00D4  8000DB     131                         JMP       E0070
0X00D7  0100FFFF   132  T0060                  PUSH      #0XFFFF
0X00DB             133  E0070                  EQU       *
0X00DB  74         134                         SETT      
0X00DC  040001     135                         DISCARD   #0D1
0X00DF  8E00FD     136                         JMPNT     I0090
0X00E2             137  ; **** PRINT statement (  21)
0X00E2  010A0020   138                         PUSH      SB:0D32
0X00E6  FF000B     139                         SVC       #SVC_WRITE_INTEGER
0X00E9  020A0039   140                         PUSHA     SB:0D57
0X00ED  FF0033     141                         SVC       #SVC_WRITE_STRING
0X00F0  010A0021   142                         PUSH      SB:0D33
0X00F4             143  ;   22       ElIf ( x = y ) Execute
0X00F4  FF000B     144                         SVC       #SVC_WRITE_INTEGER
0X00F7  FF002A     145                         SVC       #SVC_WRITE_ENDL
0X00FA  80016F     146                         JMP       E0080
0X00FD             147  I0090                  EQU       *
0X00FD  010A0020   148                         PUSH      SB:0D32
0X0101             149  ;   23          Speak x," = ",y,EndL >>
0X0101  010A0021   150                         PUSH      SB:0D33
0X0105  70         151                         CMPI      
0X0106  820110     152                         JMPE      T0100
0X0109  01000000   153                         PUSH      #0X0000
0X010D  800114     154                         JMP       E0110
0X0110  0100FFFF   155  T0100                  PUSH      #0XFFFF
0X0114             156  E0110                  EQU       *
0X0114  74         157                         SETT      
0X0115  040001     158                         DISCARD   #0D1
0X0118  8E0136     159                         JMPNT     I0120
0X011B             160  ; **** PRINT statement (  23)
0X011B  010A0020   161                         PUSH      SB:0D32
0X011F  FF000B     162                         SVC       #SVC_WRITE_INTEGER
0X0122  020A003E   163                         PUSHA     SB:0D62
0X0126  FF0033     164                         SVC       #SVC_WRITE_STRING
0X0129  010A0021   165                         PUSH      SB:0D33
0X012D             166  ;   24       ElIf ( x > y ) Execute
0X012D  FF000B     167                         SVC       #SVC_WRITE_INTEGER
0X0130  FF002A     168                         SVC       #SVC_WRITE_ENDL
Page   4  P8.hoyo

    LC  Object    Line  Source Line
------  --------  ----  -------------------------------------------------------------
0X0133  80016F     169                         JMP       E0080
0X0136             170  I0120                  EQU       *
0X0136  010A0020   171                         PUSH      SB:0D32
0X013A             172  ;   25          Speak x," > ",y,EndL >>
0X013A  010A0021   173                         PUSH      SB:0D33
0X013E  70         174                         CMPI      
0X013F  830149     175                         JMPG      T0130
0X0142  01000000   176                         PUSH      #0X0000
0X0146  80014D     177                         JMP       E0140
0X0149  0100FFFF   178  T0130                  PUSH      #0XFFFF
0X014D             179  E0140                  EQU       *
0X014D  74         180                         SETT      
0X014E  040001     181                         DISCARD   #0D1
0X0151  8E016F     182                         JMPNT     I0150
0X0154             183  ; **** PRINT statement (  25)
0X0154  010A0020   184                         PUSH      SB:0D32
0X0158  FF000B     185                         SVC       #SVC_WRITE_INTEGER
0X015B  020A0043   186                         PUSHA     SB:0D67
0X015F  FF0033     187                         SVC       #SVC_WRITE_STRING
0X0162  010A0021   188                         PUSH      SB:0D33
0X0166             189  ;   26       Stop
0X0166  FF000B     190                         SVC       #SVC_WRITE_INTEGER
0X0169             191  ;   27       x := x+1 >>
0X0169  FF002A     192                         SVC       #SVC_WRITE_ENDL
0X016C  80016F     193                         JMP       E0080
0X016F             194  I0150                  EQU       *
0X016F             195  E0080                  EQU       *
0X016F             196  ; **** assignment statement (  27)
0X016F  020A0020   197                         PUSHA     SB:0D32
0X0173  010A0020   198                         PUSH      SB:0D32
0X0177             199  ;   28       y := y-1 >>
0X0177  01000001   200                         PUSH      #0D1
0X017B  20         201                         ADDI      
0X017C  06         202                         MAKEDUP   
0X017D  03050002   203                         POP       @SP:0D2
0X0181  05         204                         SWAP      
0X0182  040001     205                         DISCARD   #0D1
0X0185  040001     206                         DISCARD   #0D1
0X0188             207  ; **** assignment statement (  28)
0X0188  020A0021   208                         PUSHA     SB:0D33
0X018C  010A0021   209                         PUSH      SB:0D33
0X0190             210  ;   29    Stop
0X0190             211  ;   30 
0X0190             212  ;   31    Speak "For-loop (2)",EndL >>
0X0190  01000001   213                         PUSH      #0D1
0X0194  22         214                         SUBI      
0X0195  06         215                         MAKEDUP   
0X0196  03050002   216                         POP       @SP:0D2
0X019A  05         217                         SWAP      
0X019B  040001     218                         DISCARD   #0D1
0X019E  040001     219                         DISCARD   #0D1
0X01A1  05         220                         SWAP      
0X01A2  06         221                         MAKEDUP   
0X01A3  01050003   222                         PUSH      @SP:0D3
0X01A7  20         223                         ADDI      
0X01A8  03050003   224                         POP       @SP:0D3
Page   5  P8.hoyo

    LC  Object    Line  Source Line
------  --------  ----  -------------------------------------------------------------
0X01AC  800096     225                         JMP       D0020
0X01AF  040003     226  E0050                  DISCARD   #0D3
0X01B2             227  ; **** PRINT statement (  31)
0X01B2  020A0048   228                         PUSHA     SB:0D72
0X01B6  FF0033     229                         SVC       #SVC_WRITE_STRING
0X01B9             230  ;   32    x := initialX >> y := initialY >>
0X01B9  FF002A     231                         SVC       #SVC_WRITE_ENDL
0X01BC             232  ; **** assignment statement (  32)
0X01BC  020A0020   233                         PUSHA     SB:0D32
0X01C0  010A0000   234                         PUSH      SB:0D0
0X01C4  06         235                         MAKEDUP   
0X01C5  03050002   236                         POP       @SP:0D2
0X01C9  05         237                         SWAP      
0X01CA  040001     238                         DISCARD   #0D1
0X01CD  040001     239                         DISCARD   #0D1
0X01D0             240  ; **** assignment statement (  32)
0X01D0  020A0021   241                         PUSHA     SB:0D33
0X01D4             242  ;   33    For i := 1 Towards n
0X01D4  010A001E   243                         PUSH      SB:0D30
0X01D8  06         244                         MAKEDUP   
0X01D9  03050002   245                         POP       @SP:0D2
0X01DD  05         246                         SWAP      
0X01DE  040001     247                         DISCARD   #0D1
0X01E1  040001     248                         DISCARD   #0D1
0X01E4             249  ; **** FOR statement (  33)
0X01E4  020A0001   250                         PUSHA     SB:0D1
0X01E8             251  ;   34       Speak i,": " >>
0X01E8  01000001   252                         PUSH      #0D1
0X01EC  03050001   253                         POP       @SP:0D1
0X01F0  010A001F   254                         PUSH      SB:0D31
0X01F4  01000001   255                         PUSH      #0D1
0X01F8  72         256                         SETNZPI   
0X01F9  8A0207     257                         JMPNZ     D0160
0X01FC  01000022   258                         PUSH      #0D34
0X0200  01000002   259                         PUSH      #0D2
0X0204  800503     260                         JMP       HANDLERUNTIMEERROR
0X0207  72         261  D0160                  SETNZPI   
0X0208  870219     262                         JMPN      L0170
0X020B  05         263                         SWAP      
0X020C  06         264                         MAKEDUP   
0X020D  01050003   265                         PUSH      @SP:0D3
0X0211  05         266                         SWAP      
0X0212  70         267                         CMPI      
0X0213  840227     268                         JMPLE     C0180
0X0216  800320     269                         JMP       E0190
0X0219  05         270  L0170                  SWAP      
0X021A  06         271                         MAKEDUP   
0X021B  01050003   272                         PUSH      @SP:0D3
0X021F  05         273                         SWAP      
0X0220  70         274                         CMPI      
0X0221  860227     275                         JMPGE     C0180
0X0224  800320     276                         JMP       E0190
0X0227             277  C0180                  EQU       *
0X0227             278  ; **** PRINT statement (  34)
0X0227  010A0001   279                         PUSH      SB:0D1
0X022B             280  ;   35       If   ( x < y ) Execute
Page   6  P8.hoyo

    LC  Object    Line  Source Line
------  --------  ----  -------------------------------------------------------------
0X022B  FF000B     281                         SVC       #SVC_WRITE_INTEGER
0X022E  020A0056   282                         PUSHA     SB:0D86
0X0232  FF0033     283                         SVC       #SVC_WRITE_STRING
0X0235             284  ; **** IF statement (  35)
0X0235  010A0020   285                         PUSH      SB:0D32
0X0239             286  ;   36          Speak x," < ",y,EndL >>
0X0239  010A0021   287                         PUSH      SB:0D33
0X023D  70         288                         CMPI      
0X023E  810248     289                         JMPL      T0200
0X0241  01000000   290                         PUSH      #0X0000
0X0245  80024C     291                         JMP       E0210
0X0248  0100FFFF   292  T0200                  PUSH      #0XFFFF
0X024C             293  E0210                  EQU       *
0X024C  74         294                         SETT      
0X024D  040001     295                         DISCARD   #0D1
0X0250  8E026E     296                         JMPNT     I0230
0X0253             297  ; **** PRINT statement (  36)
0X0253  010A0020   298                         PUSH      SB:0D32
0X0257  FF000B     299                         SVC       #SVC_WRITE_INTEGER
0X025A  020A005A   300                         PUSHA     SB:0D90
0X025E  FF0033     301                         SVC       #SVC_WRITE_STRING
0X0261  010A0021   302                         PUSH      SB:0D33
0X0265             303  ;   37       ElIf ( x = y ) Execute
0X0265  FF000B     304                         SVC       #SVC_WRITE_INTEGER
0X0268  FF002A     305                         SVC       #SVC_WRITE_ENDL
0X026B  8002E0     306                         JMP       E0220
0X026E             307  I0230                  EQU       *
0X026E  010A0020   308                         PUSH      SB:0D32
0X0272             309  ;   38          Speak x," = ",y,EndL >>
0X0272  010A0021   310                         PUSH      SB:0D33
0X0276  70         311                         CMPI      
0X0277  820281     312                         JMPE      T0240
0X027A  01000000   313                         PUSH      #0X0000
0X027E  800285     314                         JMP       E0250
0X0281  0100FFFF   315  T0240                  PUSH      #0XFFFF
0X0285             316  E0250                  EQU       *
0X0285  74         317                         SETT      
0X0286  040001     318                         DISCARD   #0D1
0X0289  8E02A7     319                         JMPNT     I0260
0X028C             320  ; **** PRINT statement (  38)
0X028C  010A0020   321                         PUSH      SB:0D32
0X0290  FF000B     322                         SVC       #SVC_WRITE_INTEGER
0X0293  020A005F   323                         PUSHA     SB:0D95
0X0297  FF0033     324                         SVC       #SVC_WRITE_STRING
0X029A  010A0021   325                         PUSH      SB:0D33
0X029E             326  ;   39       ElIf ( x > y ) Execute
0X029E  FF000B     327                         SVC       #SVC_WRITE_INTEGER
0X02A1  FF002A     328                         SVC       #SVC_WRITE_ENDL
0X02A4  8002E0     329                         JMP       E0220
0X02A7             330  I0260                  EQU       *
0X02A7  010A0020   331                         PUSH      SB:0D32
0X02AB             332  ;   40          Speak x," > ",y,EndL >>
0X02AB  010A0021   333                         PUSH      SB:0D33
0X02AF  70         334                         CMPI      
0X02B0  8302BA     335                         JMPG      T0270
0X02B3  01000000   336                         PUSH      #0X0000
Page   7  P8.hoyo

    LC  Object    Line  Source Line
------  --------  ----  -------------------------------------------------------------
0X02B7  8002BE     337                         JMP       E0280
0X02BA  0100FFFF   338  T0270                  PUSH      #0XFFFF
0X02BE             339  E0280                  EQU       *
0X02BE  74         340                         SETT      
0X02BF  040001     341                         DISCARD   #0D1
0X02C2  8E02E0     342                         JMPNT     I0290
0X02C5             343  ; **** PRINT statement (  40)
0X02C5  010A0020   344                         PUSH      SB:0D32
0X02C9  FF000B     345                         SVC       #SVC_WRITE_INTEGER
0X02CC  020A0064   346                         PUSHA     SB:0D100
0X02D0  FF0033     347                         SVC       #SVC_WRITE_STRING
0X02D3  010A0021   348                         PUSH      SB:0D33
0X02D7             349  ;   41       Stop
0X02D7  FF000B     350                         SVC       #SVC_WRITE_INTEGER
0X02DA             351  ;   42       x := x+2 >>
0X02DA  FF002A     352                         SVC       #SVC_WRITE_ENDL
0X02DD  8002E0     353                         JMP       E0220
0X02E0             354  I0290                  EQU       *
0X02E0             355  E0220                  EQU       *
0X02E0             356  ; **** assignment statement (  42)
0X02E0  020A0020   357                         PUSHA     SB:0D32
0X02E4  010A0020   358                         PUSH      SB:0D32
0X02E8             359  ;   43       y := y-2 >>
0X02E8  01000002   360                         PUSH      #0D2
0X02EC  20         361                         ADDI      
0X02ED  06         362                         MAKEDUP   
0X02EE  03050002   363                         POP       @SP:0D2
0X02F2  05         364                         SWAP      
0X02F3  040001     365                         DISCARD   #0D1
0X02F6  040001     366                         DISCARD   #0D1
0X02F9             367  ; **** assignment statement (  43)
0X02F9  020A0021   368                         PUSHA     SB:0D33
0X02FD  010A0021   369                         PUSH      SB:0D33
0X0301             370  ;   44    Stop
0X0301             371  ;   45 
0X0301             372  ;   46    Speak "For-loop (3)",EndL >>
0X0301  01000002   373                         PUSH      #0D2
0X0305  22         374                         SUBI      
0X0306  06         375                         MAKEDUP   
0X0307  03050002   376                         POP       @SP:0D2
0X030B  05         377                         SWAP      
0X030C  040001     378                         DISCARD   #0D1
0X030F  040001     379                         DISCARD   #0D1
0X0312  05         380                         SWAP      
0X0313  06         381                         MAKEDUP   
0X0314  01050003   382                         PUSH      @SP:0D3
0X0318  20         383                         ADDI      
0X0319  03050003   384                         POP       @SP:0D3
0X031D  800207     385                         JMP       D0160
0X0320  040003     386  E0190                  DISCARD   #0D3
0X0323             387  ; **** PRINT statement (  46)
0X0323  020A0069   388                         PUSHA     SB:0D105
0X0327  FF0033     389                         SVC       #SVC_WRITE_STRING
0X032A             390  ;   47    x := initialX >> y := initialY >>
0X032A  FF002A     391                         SVC       #SVC_WRITE_ENDL
0X032D             392  ; **** assignment statement (  47)
Page   8  P8.hoyo

    LC  Object    Line  Source Line
------  --------  ----  -------------------------------------------------------------
0X032D  020A0020   393                         PUSHA     SB:0D32
0X0331  010A0000   394                         PUSH      SB:0D0
0X0335  06         395                         MAKEDUP   
0X0336  03050002   396                         POP       @SP:0D2
0X033A  05         397                         SWAP      
0X033B  040001     398                         DISCARD   #0D1
0X033E  040001     399                         DISCARD   #0D1
0X0341             400  ; **** assignment statement (  47)
0X0341  020A0021   401                         PUSHA     SB:0D33
0X0345             402  ;   48    For i := n Towards 1 Account -1
0X0345  010A001E   403                         PUSH      SB:0D30
0X0349  06         404                         MAKEDUP   
0X034A  03050002   405                         POP       @SP:0D2
0X034E  05         406                         SWAP      
0X034F  040001     407                         DISCARD   #0D1
0X0352  040001     408                         DISCARD   #0D1
0X0355             409  ; **** FOR statement (  48)
0X0355  020A0001   410                         PUSHA     SB:0D1
0X0359  010A001F   411                         PUSH      SB:0D31
0X035D  03050001   412                         POP       @SP:0D1
0X0361             413  ;   49       Speak i,": " >>
0X0361  01000001   414                         PUSH      #0D1
0X0365  01000001   415                         PUSH      #0D1
0X0369  2B         416                         NEGI      
0X036A  72         417                         SETNZPI   
0X036B  8A0379     418                         JMPNZ     D0300
0X036E  01000031   419                         PUSH      #0D49
0X0372  01000002   420                         PUSH      #0D2
0X0376  800503     421                         JMP       HANDLERUNTIMEERROR
0X0379  72         422  D0300                  SETNZPI   
0X037A  87038B     423                         JMPN      L0310
0X037D  05         424                         SWAP      
0X037E  06         425                         MAKEDUP   
0X037F  01050003   426                         PUSH      @SP:0D3
0X0383  05         427                         SWAP      
0X0384  70         428                         CMPI      
0X0385  840399     429                         JMPLE     C0320
0X0388  800492     430                         JMP       E0330
0X038B  05         431  L0310                  SWAP      
0X038C  06         432                         MAKEDUP   
0X038D  01050003   433                         PUSH      @SP:0D3
0X0391  05         434                         SWAP      
0X0392  70         435                         CMPI      
0X0393  860399     436                         JMPGE     C0320
0X0396  800492     437                         JMP       E0330
0X0399             438  C0320                  EQU       *
0X0399             439  ; **** PRINT statement (  49)
0X0399  010A0001   440                         PUSH      SB:0D1
0X039D             441  ;   50       If   ( x < y ) Execute
0X039D  FF000B     442                         SVC       #SVC_WRITE_INTEGER
0X03A0  020A0077   443                         PUSHA     SB:0D119
0X03A4  FF0033     444                         SVC       #SVC_WRITE_STRING
0X03A7             445  ; **** IF statement (  50)
0X03A7  010A0020   446                         PUSH      SB:0D32
0X03AB             447  ;   51          Speak x," < ",y,EndL >>
0X03AB  010A0021   448                         PUSH      SB:0D33
Page   9  P8.hoyo

    LC  Object    Line  Source Line
------  --------  ----  -------------------------------------------------------------
0X03AF  70         449                         CMPI      
0X03B0  8103BA     450                         JMPL      T0340
0X03B3  01000000   451                         PUSH      #0X0000
0X03B7  8003BE     452                         JMP       E0350
0X03BA  0100FFFF   453  T0340                  PUSH      #0XFFFF
0X03BE             454  E0350                  EQU       *
0X03BE  74         455                         SETT      
0X03BF  040001     456                         DISCARD   #0D1
0X03C2  8E03E0     457                         JMPNT     I0370
0X03C5             458  ; **** PRINT statement (  51)
0X03C5  010A0020   459                         PUSH      SB:0D32
0X03C9  FF000B     460                         SVC       #SVC_WRITE_INTEGER
0X03CC  020A007B   461                         PUSHA     SB:0D123
0X03D0  FF0033     462                         SVC       #SVC_WRITE_STRING
0X03D3  010A0021   463                         PUSH      SB:0D33
0X03D7             464  ;   52       ElIf ( x = y ) Execute
0X03D7  FF000B     465                         SVC       #SVC_WRITE_INTEGER
0X03DA  FF002A     466                         SVC       #SVC_WRITE_ENDL
0X03DD  800452     467                         JMP       E0360
0X03E0             468  I0370                  EQU       *
0X03E0  010A0020   469                         PUSH      SB:0D32
0X03E4             470  ;   53          Speak x," = ",y,EndL >>
0X03E4  010A0021   471                         PUSH      SB:0D33
0X03E8  70         472                         CMPI      
0X03E9  8203F3     473                         JMPE      T0380
0X03EC  01000000   474                         PUSH      #0X0000
0X03F0  8003F7     475                         JMP       E0390
0X03F3  0100FFFF   476  T0380                  PUSH      #0XFFFF
0X03F7             477  E0390                  EQU       *
0X03F7  74         478                         SETT      
0X03F8  040001     479                         DISCARD   #0D1
0X03FB  8E0419     480                         JMPNT     I0400
0X03FE             481  ; **** PRINT statement (  53)
0X03FE  010A0020   482                         PUSH      SB:0D32
0X0402  FF000B     483                         SVC       #SVC_WRITE_INTEGER
0X0405  020A0080   484                         PUSHA     SB:0D128
0X0409  FF0033     485                         SVC       #SVC_WRITE_STRING
0X040C  010A0021   486                         PUSH      SB:0D33
0X0410             487  ;   54       ElIf ( x > y ) Execute
0X0410  FF000B     488                         SVC       #SVC_WRITE_INTEGER
0X0413  FF002A     489                         SVC       #SVC_WRITE_ENDL
0X0416  800452     490                         JMP       E0360
0X0419             491  I0400                  EQU       *
0X0419  010A0020   492                         PUSH      SB:0D32
0X041D             493  ;   55          Speak x," > ",y,EndL >>
0X041D  010A0021   494                         PUSH      SB:0D33
0X0421  70         495                         CMPI      
0X0422  83042C     496                         JMPG      T0410
0X0425  01000000   497                         PUSH      #0X0000
0X0429  800430     498                         JMP       E0420
0X042C  0100FFFF   499  T0410                  PUSH      #0XFFFF
0X0430             500  E0420                  EQU       *
0X0430  74         501                         SETT      
0X0431  040001     502                         DISCARD   #0D1
0X0434  8E0452     503                         JMPNT     I0430
0X0437             504  ; **** PRINT statement (  55)
Page  10  P8.hoyo

    LC  Object    Line  Source Line
------  --------  ----  -------------------------------------------------------------
0X0437  010A0020   505                         PUSH      SB:0D32
0X043B  FF000B     506                         SVC       #SVC_WRITE_INTEGER
0X043E  020A0085   507                         PUSHA     SB:0D133
0X0442  FF0033     508                         SVC       #SVC_WRITE_STRING
0X0445  010A0021   509                         PUSH      SB:0D33
0X0449             510  ;   56       Stop
0X0449  FF000B     511                         SVC       #SVC_WRITE_INTEGER
0X044C             512  ;   57       x := x+3 >>
0X044C  FF002A     513                         SVC       #SVC_WRITE_ENDL
0X044F  800452     514                         JMP       E0360
0X0452             515  I0430                  EQU       *
0X0452             516  E0360                  EQU       *
0X0452             517  ; **** assignment statement (  57)
0X0452  020A0020   518                         PUSHA     SB:0D32
0X0456  010A0020   519                         PUSH      SB:0D32
0X045A             520  ;   58       y := y-3 >>
0X045A  01000003   521                         PUSH      #0D3
0X045E  20         522                         ADDI      
0X045F  06         523                         MAKEDUP   
0X0460  03050002   524                         POP       @SP:0D2
0X0464  05         525                         SWAP      
0X0465  040001     526                         DISCARD   #0D1
0X0468  040001     527                         DISCARD   #0D1
0X046B             528  ; **** assignment statement (  58)
0X046B  020A0021   529                         PUSHA     SB:0D33
0X046F  010A0021   530                         PUSH      SB:0D33
0X0473             531  ;   59    Stop
0X0473             532  ;   60 
0X0473             533  ;   61    Speak "For-loop (4)",EndL >>
0X0473  01000003   534                         PUSH      #0D3
0X0477  22         535                         SUBI      
0X0478  06         536                         MAKEDUP   
0X0479  03050002   537                         POP       @SP:0D2
0X047D  05         538                         SWAP      
0X047E  040001     539                         DISCARD   #0D1
0X0481  040001     540                         DISCARD   #0D1
0X0484  05         541                         SWAP      
0X0485  06         542                         MAKEDUP   
0X0486  01050003   543                         PUSH      @SP:0D3
0X048A  20         544                         ADDI      
0X048B  03050003   545                         POP       @SP:0D3
0X048F  800379     546                         JMP       D0300
0X0492  040003     547  E0330                  DISCARD   #0D3
0X0495             548  ; **** PRINT statement (  61)
0X0495  020A008A   549                         PUSHA     SB:0D138
0X0499  FF0033     550                         SVC       #SVC_WRITE_STRING
0X049C             551  ;   62    For i := 1 Towards n Account 1-1              # run-time error #2 (e3 = 0)
0X049C  FF002A     552                         SVC       #SVC_WRITE_ENDL
0X049F             553  ; **** FOR statement (  62)
0X049F  020A0001   554                         PUSHA     SB:0D1
0X04A3  01000001   555                         PUSH      #0D1
0X04A7  03050001   556                         POP       @SP:0D1
0X04AB  010A001F   557                         PUSH      SB:0D31
0X04AF  01000001   558                         PUSH      #0D1
0X04B3             559  ;   63       Speak "UNREACHABLE",EndL >>
0X04B3  01000001   560                         PUSH      #0D1
Page  11  P8.hoyo

    LC  Object    Line  Source Line
------  --------  ----  -------------------------------------------------------------
0X04B7  22         561                         SUBI      
0X04B8  72         562                         SETNZPI   
0X04B9  8A04C7     563                         JMPNZ     D0440
0X04BC  0100003F   564                         PUSH      #0D63
0X04C0  01000002   565                         PUSH      #0D2
0X04C4  800503     566                         JMP       HANDLERUNTIMEERROR
0X04C7  72         567  D0440                  SETNZPI   
0X04C8  8704D9     568                         JMPN      L0450
0X04CB  05         569                         SWAP      
0X04CC  06         570                         MAKEDUP   
0X04CD  01050003   571                         PUSH      @SP:0D3
0X04D1  05         572                         SWAP      
0X04D2  70         573                         CMPI      
0X04D3  8404E7     574                         JMPLE     C0460
0X04D6  8004FF     575                         JMP       E0470
0X04D9  05         576  L0450                  SWAP      
0X04DA  06         577                         MAKEDUP   
0X04DB  01050003   578                         PUSH      @SP:0D3
0X04DF  05         579                         SWAP      
0X04E0  70         580                         CMPI      
0X04E1  8604E7     581                         JMPGE     C0460
0X04E4  8004FF     582                         JMP       E0470
0X04E7             583  C0460                  EQU       *
0X04E7             584  ; **** PRINT statement (  63)
0X04E7  020A0098   585                         PUSHA     SB:0D152
0X04EB  FF0033     586                         SVC       #SVC_WRITE_STRING
0X04EE             587  ;   64    Stop
0X04EE             588  ;   65 
0X04EE             589  ;   66 Stop
0X04EE  FF002A     590                         SVC       #SVC_WRITE_ENDL
0X04F1             591  ;   67 
0X04F1  05         592                         SWAP      
0X04F2  06         593                         MAKEDUP   
0X04F3  01050003   594                         PUSH      @SP:0D3
0X04F7  20         595                         ADDI      
0X04F8  03050003   596                         POP       @SP:0D3
0X04FC  8004C7     597                         JMP       D0440
0X04FF  040003     598  E0470                  DISCARD   #0D3
0X0502  A1         599                         RETURN    
0X0503             600  ; **** =========
0X0503             601  ; **** END (  66)
0X0503             602  ; **** =========
0X0503             603  
0X0503             604  ;------------------------------------------------------------
0X0503             605  ; Issue "Run-time error #X..X near line #X..X" to handle run-time errors
0X0503             606  ;------------------------------------------------------------
0X0503             607  HANDLERUNTIMEERROR     EQU       *
0X0503  FF002A     608                         SVC       #SVC_WRITE_ENDL
0X0506  020A00A5   609                         PUSHA     SB:0D165
0X050A  FF0033     610                         SVC       #SVC_WRITE_STRING
0X050D  FF000B     611                         SVC       #SVC_WRITE_INTEGER
0X0510  020A00B7   612                         PUSHA     SB:0D183
0X0514  FF0033     613                         SVC       #SVC_WRITE_STRING
0X0517  FF000B     614                         SVC       #SVC_WRITE_INTEGER
0X051A  FF002A     615                         SVC       #SVC_WRITE_ENDL
0X051D  01000001   616                         PUSH      #0D1
Page  12  P8.hoyo

    LC  Object    Line  Source Line
------  --------  ----  -------------------------------------------------------------
0X0521  FF0001     617                         SVC       #SVC_TERMINATE
0X0524             618  
0X0524             619  ;------------------------------------------------------------
0X0524             620  ; Static allocation of global data and PROGRAM module data
0X0524             621  ;------------------------------------------------------------
0X0524             622  STATICDATA             EQU       *
0X0524  0001       623                         DW        0D1                  ; initialX
0X0526             624                         RW        0D1                  ; i
0X0528  001A001A   625                         DS        "Normal program termination"
0X052C  004E006F
0X0530  0072006D
0X0534  0061006C
0X0538  00200070
0X053C  0072006F
0X0540  00670072
0X0544  0061006D
0X0548  00200074
0X054C  00650072
0X0550  006D0069
0X0554  006E0061
0X0558  00740069
0X055C  006F006E
0X0560  0003       626                         DW        0D3                  ; initialY
0X0562             627                         RW        0D1                  ; n
0X0564             628                         RW        0D1                  ; x
0X0566             629                         RW        0D1                  ; y
0X0568  00030003   630                         DS        "n? "
0X056C  006E003F
0X0570  0020    
0X0572  000C000C   631                         DS        "For-loop (1)"
0X0576  0046006F
0X057A  0072002D
0X057E  006C006F
0X0582  006F0070
0X0586  00200028
0X058A  00310029
0X058E  00020002   632                         DS        ": "
0X0592  003A0020
0X0596  00030003   633                         DS        " < "
0X059A  0020003C
0X059E  0020    
0X05A0  00030003   634                         DS        " = "
0X05A4  0020003D
0X05A8  0020    
0X05AA  00030003   635                         DS        " > "
0X05AE  0020003E
0X05B2  0020    
0X05B4  000C000C   636                         DS        "For-loop (2)"
0X05B8  0046006F
0X05BC  0072002D
0X05C0  006C006F
0X05C4  006F0070
0X05C8  00200028
0X05CC  00320029
0X05D0  00020002   637                         DS        ": "
0X05D4  003A0020
Page  13  P8.hoyo

    LC  Object    Line  Source Line
------  --------  ----  -------------------------------------------------------------
0X05D8  00030003   638                         DS        " < "
0X05DC  0020003C
0X05E0  0020    
0X05E2  00030003   639                         DS        " = "
0X05E6  0020003D
0X05EA  0020    
0X05EC  00030003   640                         DS        " > "
0X05F0  0020003E
0X05F4  0020    
0X05F6  000C000C   641                         DS        "For-loop (3)"
0X05FA  0046006F
0X05FE  0072002D
0X0602  006C006F
0X0606  006F0070
0X060A  00200028
0X060E  00330029
0X0612  00020002   642                         DS        ": "
0X0616  003A0020
0X061A  00030003   643                         DS        " < "
0X061E  0020003C
0X0622  0020    
0X0624  00030003   644                         DS        " = "
0X0628  0020003D
0X062C  0020    
0X062E  00030003   645                         DS        " > "
0X0632  0020003E
0X0636  0020    
0X0638  000C000C   646                         DS        "For-loop (4)"
0X063C  0046006F
0X0640  0072002D
0X0644  006C006F
0X0648  006F0070
0X064C  00200028
0X0650  00340029
0X0654  000B000B   647                         DS        "UNREACHABLE"
0X0658  0055004E
0X065C  00520045
0X0660  00410043
0X0664  00480041
0X0668  0042004C
0X066C  0045    
0X066E  00100010   648                         DS        "Run-time error #"
0X0672  00520075
0X0676  006E002D
0X067A  00740069
0X067E  006D0065
0X0682  00200065
0X0686  00720072
0X068A  006F0072
0X068E  00200023
0X0692  000C000C   649                         DS        " near line #"
0X0696  0020006E
0X069A  00650061
0X069E  00720020
0X06A2  006C0069
0X06A6  006E0065
Page  14  P8.hoyo

    LC  Object    Line  Source Line
------  --------  ----  -------------------------------------------------------------
0X06AA  00200023
0X06AE             650  
0X06AE             651  ;------------------------------------------------------------
0X06AE             652  ; Heap space for dynamic memory allocation (to support future SPL syntax)
0X06AE             653  ;------------------------------------------------------------
0X06AE             654  HEAPBASE               EQU       *
0X06AE             655  HEAPSIZE               EQU       0B0001000000000000   ; 8K bytes = 4K words
0X06AE             656  
0X06AE             657  ;------------------------------------------------------------
0X06AE             658  ; Run-time stack
0X06AE             659  ;------------------------------------------------------------
0X06AE             660  RUNTIMESTACK           EQU       0XFFFE


  PC   SP TOS0 TOS1 TOS2 mnemonic  information
---- ---- ---- ---- ---- --------- ----------------------------------------------
0000 FFFE                 JMP       0X0003
0003 FFFE                 PUSH      #memory[EA = 0X0005] = 0XFFFE
0007 FFFC FFFE            POPSP     SP = 0XFFFE
0008 FFFE                 PUSHA     memory[EA = 0X0524]
000C FFFC 0524            POPSB     SB = 0X0524
000D FFFE                 PUSH      #memory[EA = 0X000F] = 0X06AE
0011 FFFC 06AE            PUSH      #memory[EA = 0X0013] = 0X1000
-------------------------------------------------------------
FREE nodes list
   0X06AE:0X16AD(0X0FFC)
-------------------------------------------------------------
0015 FFFA 1000 06AE       SVC       #90 initialize heap, heapBase = 0X06AE, heapSize = 0X1000 words
0018 FFFE                 CALL      0X002C return to 0X001B
002C FFFC 001B            PUSHA     SB( 34) memory[EA = 0X0568]
0030 FFFA 0568 001B       SVC       #51 write string
0033 FFFC 001B            PUSHA     SB( 31) memory[EA = 0X0562]
n? 7
0037 FFFA 0562 001B       SVC       #10 read integer 0X0007
003A FFF8 0007 0562  001B POP       @SP(  1) memory[EA = 0X0562 = memory[0XFFFC]] = 0X0007
003E FFFA 0562 001B       DISCARD   #1 words from top-of-stack
0041 FFFC 001B            PUSHA     SB( 39) memory[EA = 0X0572]
0045 FFFA 0572 001B       SVC       #51 write string
For-loop (1)
0048 FFFC 001B            SVC       #42 write ENDL
004B FFFC 001B            PUSHA     SB( 32) memory[EA = 0X0564]
004F FFFA 0564 001B       PUSH      SB(  0) memory[EA = 0X0524] = 0X0001
0053 FFF8 0001 0564  001B MAKEDUP   duplicate 0X0001
0054 FFF6 0001 0001  0564 POP       @SP(  2) memory[EA = 0X0564 = memory[0XFFFC]] = 0X0001
0058 FFF8 0001 0564  001B SWAP      0X0564 <--> 0X0001
0059 FFF8 0564 0001  001B DISCARD   #1 words from top-of-stack
005C FFFA 0001 001B       DISCARD   #1 words from top-of-stack
005F FFFC 001B            PUSHA     SB( 33) memory[EA = 0X0566]
0063 FFFA 0566 001B       PUSH      SB( 30) memory[EA = 0X0560] = 0X0003
0067 FFF8 0003 0566  001B MAKEDUP   duplicate 0X0003
0068 FFF6 0003 0003  0566 POP       @SP(  2) memory[EA = 0X0566 = memory[0XFFFC]] = 0X0003
006C FFF8 0003 0566  001B SWAP      0X0566 <--> 0X0003
006D FFF8 0566 0003  001B DISCARD   #1 words from top-of-stack
0070 FFFA 0003 001B       DISCARD   #1 words from top-of-stack
0073 FFFC 001B            PUSHA     SB(  1) memory[EA = 0X0526]
0077 FFFA 0526 001B       PUSH      #memory[EA = 0X0079] = 0X0001
007B FFF8 0001 0526  001B POP       @SP(  1) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0001
007F FFFA 0526 001B       PUSH      SB( 31) memory[EA = 0X0562] = 0X0007
0083 FFF8 0007 0526  001B PUSH      #memory[EA = 0X0085] = 0X0001
0087 FFF6 0001 0007  0526 SETNZPI   TOS = 0X0001 NZP = 001
0088 FFF6 0001 0007  0526 JMPNZ     0X0096 NZP = 001
0096 FFF6 0001 0007  0526 SETNZPI   TOS = 0X0001 NZP = 001
0097 FFF6 0001 0007  0526 JMPN      0X00A8 NZP = 001
009A FFF6 0001 0007  0526 SWAP      0X0007 <--> 0X0001
009B FFF6 0007 0001  0526 MAKEDUP   duplicate 0X0007
009C FFF4 0007 0007  0001 PUSH      @SP(  3) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0001
00A0 FFF2 0001 0007  0007 SWAP      0X0007 <--> 0X0001
00A1 FFF2 0007 0001  0007 CMPI      0X0001 ? 0X0007 LEG = 100
00A2 FFF6 0007 0001  0526 JMPLE     0X00B6 LEG = 100
00B6 FFF6 0007 0001  0526 PUSH      SB(  1) memory[EA = 0X0526] = 0X0001
00BA FFF4 0001 0007  0001 SVC       #11 write integer
00BD FFF6 0007 0001  0526 PUSHA     SB( 53) memory[EA = 0X058E]
00C1 FFF4 058E 0007  0001 SVC       #51 write string
00C4 FFF6 0007 0001  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X0001
00C8 FFF4 0001 0007  0001 PUSH      SB( 33) memory[EA = 0X0566] = 0X0003
00CC FFF2 0003 0001  0007 CMPI      0X0001 ? 0X0003 LEG = 100
00CD FFF6 0007 0001  0526 JMPL      0X00D7 LEG = 100
00D7 FFF6 0007 0001  0526 PUSH      #memory[EA = 0X00D9] = 0XFFFF
00DB FFF4 FFFF 0007  0001 SETT      T = 1
00DC FFF4 FFFF 0007  0001 DISCARD   #1 words from top-of-stack
00DF FFF6 0007 0001  0526 JMPNT     0X00FD T = 1
00E2 FFF6 0007 0001  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X0001
00E6 FFF4 0001 0007  0001 SVC       #11 write integer
00E9 FFF6 0007 0001  0526 PUSHA     SB( 57) memory[EA = 0X0596]
00ED FFF4 0596 0007  0001 SVC       #51 write string
00F0 FFF6 0007 0001  0526 PUSH      SB( 33) memory[EA = 0X0566] = 0X0003
00F4 FFF4 0003 0007  0001 SVC       #11 write integer
1: 1 < 3
00F7 FFF6 0007 0001  0526 SVC       #42 write ENDL
00FA FFF6 0007 0001  0526 JMP       0X016F
016F FFF6 0007 0001  0526 PUSHA     SB( 32) memory[EA = 0X0564]
0173 FFF4 0564 0007  0001 PUSH      SB( 32) memory[EA = 0X0564] = 0X0001
0177 FFF2 0001 0564  0007 PUSH      #memory[EA = 0X0179] = 0X0001
017B FFF0 0001 0001  0564 ADDI      0X0002 = 0X0001 + 0X0001
017C FFF2 0002 0564  0007 MAKEDUP   duplicate 0X0002
017D FFF0 0002 0002  0564 POP       @SP(  2) memory[EA = 0X0564 = memory[0XFFF6]] = 0X0002
0181 FFF2 0002 0564  0007 SWAP      0X0564 <--> 0X0002
0182 FFF2 0564 0002  0007 DISCARD   #1 words from top-of-stack
0185 FFF4 0002 0007  0001 DISCARD   #1 words from top-of-stack
0188 FFF6 0007 0001  0526 PUSHA     SB( 33) memory[EA = 0X0566]
018C FFF4 0566 0007  0001 PUSH      SB( 33) memory[EA = 0X0566] = 0X0003
0190 FFF2 0003 0566  0007 PUSH      #memory[EA = 0X0192] = 0X0001
0194 FFF0 0001 0003  0566 SUBI      0X0002 = 0X0003 - 0X0001
0195 FFF2 0002 0566  0007 MAKEDUP   duplicate 0X0002
0196 FFF0 0002 0002  0566 POP       @SP(  2) memory[EA = 0X0566 = memory[0XFFF6]] = 0X0002
019A FFF2 0002 0566  0007 SWAP      0X0566 <--> 0X0002
019B FFF2 0566 0002  0007 DISCARD   #1 words from top-of-stack
019E FFF4 0002 0007  0001 DISCARD   #1 words from top-of-stack
01A1 FFF6 0007 0001  0526 SWAP      0X0001 <--> 0X0007
01A2 FFF6 0001 0007  0526 MAKEDUP   duplicate 0X0001
01A3 FFF4 0001 0001  0007 PUSH      @SP(  3) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0001
01A7 FFF2 0001 0001  0001 ADDI      0X0002 = 0X0001 + 0X0001
01A8 FFF4 0002 0001  0007 POP       @SP(  3) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0002
01AC FFF6 0001 0007  0526 JMP       0X0096
0096 FFF6 0001 0007  0526 SETNZPI   TOS = 0X0001 NZP = 001
0097 FFF6 0001 0007  0526 JMPN      0X00A8 NZP = 001
009A FFF6 0001 0007  0526 SWAP      0X0007 <--> 0X0001
009B FFF6 0007 0001  0526 MAKEDUP   duplicate 0X0007
009C FFF4 0007 0007  0001 PUSH      @SP(  3) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0002
00A0 FFF2 0002 0007  0007 SWAP      0X0007 <--> 0X0002
00A1 FFF2 0007 0002  0007 CMPI      0X0002 ? 0X0007 LEG = 100
00A2 FFF6 0007 0001  0526 JMPLE     0X00B6 LEG = 100
00B6 FFF6 0007 0001  0526 PUSH      SB(  1) memory[EA = 0X0526] = 0X0002
00BA FFF4 0002 0007  0001 SVC       #11 write integer
00BD FFF6 0007 0001  0526 PUSHA     SB( 53) memory[EA = 0X058E]
00C1 FFF4 058E 0007  0001 SVC       #51 write string
00C4 FFF6 0007 0001  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X0002
00C8 FFF4 0002 0007  0001 PUSH      SB( 33) memory[EA = 0X0566] = 0X0002
00CC FFF2 0002 0002  0007 CMPI      0X0002 ? 0X0002 LEG = 010
00CD FFF6 0007 0001  0526 JMPL      0X00D7 LEG = 010
00D0 FFF6 0007 0001  0526 PUSH      #memory[EA = 0X00D2] = 0X0000
00D4 FFF4 0000 0007  0001 JMP       0X00DB
00DB FFF4 0000 0007  0001 SETT      T = 0
00DC FFF4 0000 0007  0001 DISCARD   #1 words from top-of-stack
00DF FFF6 0007 0001  0526 JMPNT     0X00FD T = 0
00FD FFF6 0007 0001  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X0002
0101 FFF4 0002 0007  0001 PUSH      SB( 33) memory[EA = 0X0566] = 0X0002
0105 FFF2 0002 0002  0007 CMPI      0X0002 ? 0X0002 LEG = 010
0106 FFF6 0007 0001  0526 JMPE      0X0110 LEG = 010
0110 FFF6 0007 0001  0526 PUSH      #memory[EA = 0X0112] = 0XFFFF
0114 FFF4 FFFF 0007  0001 SETT      T = 1
0115 FFF4 FFFF 0007  0001 DISCARD   #1 words from top-of-stack
0118 FFF6 0007 0001  0526 JMPNT     0X0136 T = 1
011B FFF6 0007 0001  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X0002
011F FFF4 0002 0007  0001 SVC       #11 write integer
0122 FFF6 0007 0001  0526 PUSHA     SB( 62) memory[EA = 0X05A0]
0126 FFF4 05A0 0007  0001 SVC       #51 write string
0129 FFF6 0007 0001  0526 PUSH      SB( 33) memory[EA = 0X0566] = 0X0002
012D FFF4 0002 0007  0001 SVC       #11 write integer
2: 2 = 2
0130 FFF6 0007 0001  0526 SVC       #42 write ENDL
0133 FFF6 0007 0001  0526 JMP       0X016F
016F FFF6 0007 0001  0526 PUSHA     SB( 32) memory[EA = 0X0564]
0173 FFF4 0564 0007  0001 PUSH      SB( 32) memory[EA = 0X0564] = 0X0002
0177 FFF2 0002 0564  0007 PUSH      #memory[EA = 0X0179] = 0X0001
017B FFF0 0001 0002  0564 ADDI      0X0003 = 0X0002 + 0X0001
017C FFF2 0003 0564  0007 MAKEDUP   duplicate 0X0003
017D FFF0 0003 0003  0564 POP       @SP(  2) memory[EA = 0X0564 = memory[0XFFF6]] = 0X0003
0181 FFF2 0003 0564  0007 SWAP      0X0564 <--> 0X0003
0182 FFF2 0564 0003  0007 DISCARD   #1 words from top-of-stack
0185 FFF4 0003 0007  0001 DISCARD   #1 words from top-of-stack
0188 FFF6 0007 0001  0526 PUSHA     SB( 33) memory[EA = 0X0566]
018C FFF4 0566 0007  0001 PUSH      SB( 33) memory[EA = 0X0566] = 0X0002
0190 FFF2 0002 0566  0007 PUSH      #memory[EA = 0X0192] = 0X0001
0194 FFF0 0001 0002  0566 SUBI      0X0001 = 0X0002 - 0X0001
0195 FFF2 0001 0566  0007 MAKEDUP   duplicate 0X0001
0196 FFF0 0001 0001  0566 POP       @SP(  2) memory[EA = 0X0566 = memory[0XFFF6]] = 0X0001
019A FFF2 0001 0566  0007 SWAP      0X0566 <--> 0X0001
019B FFF2 0566 0001  0007 DISCARD   #1 words from top-of-stack
019E FFF4 0001 0007  0001 DISCARD   #1 words from top-of-stack
01A1 FFF6 0007 0001  0526 SWAP      0X0001 <--> 0X0007
01A2 FFF6 0001 0007  0526 MAKEDUP   duplicate 0X0001
01A3 FFF4 0001 0001  0007 PUSH      @SP(  3) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0002
01A7 FFF2 0002 0001  0001 ADDI      0X0003 = 0X0001 + 0X0002
01A8 FFF4 0003 0001  0007 POP       @SP(  3) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0003
01AC FFF6 0001 0007  0526 JMP       0X0096
0096 FFF6 0001 0007  0526 SETNZPI   TOS = 0X0001 NZP = 001
0097 FFF6 0001 0007  0526 JMPN      0X00A8 NZP = 001
009A FFF6 0001 0007  0526 SWAP      0X0007 <--> 0X0001
009B FFF6 0007 0001  0526 MAKEDUP   duplicate 0X0007
009C FFF4 0007 0007  0001 PUSH      @SP(  3) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0003
00A0 FFF2 0003 0007  0007 SWAP      0X0007 <--> 0X0003
00A1 FFF2 0007 0003  0007 CMPI      0X0003 ? 0X0007 LEG = 100
00A2 FFF6 0007 0001  0526 JMPLE     0X00B6 LEG = 100
00B6 FFF6 0007 0001  0526 PUSH      SB(  1) memory[EA = 0X0526] = 0X0003
00BA FFF4 0003 0007  0001 SVC       #11 write integer
00BD FFF6 0007 0001  0526 PUSHA     SB( 53) memory[EA = 0X058E]
00C1 FFF4 058E 0007  0001 SVC       #51 write string
00C4 FFF6 0007 0001  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X0003
00C8 FFF4 0003 0007  0001 PUSH      SB( 33) memory[EA = 0X0566] = 0X0001
00CC FFF2 0001 0003  0007 CMPI      0X0003 ? 0X0001 LEG = 001
00CD FFF6 0007 0001  0526 JMPL      0X00D7 LEG = 001
00D0 FFF6 0007 0001  0526 PUSH      #memory[EA = 0X00D2] = 0X0000
00D4 FFF4 0000 0007  0001 JMP       0X00DB
00DB FFF4 0000 0007  0001 SETT      T = 0
00DC FFF4 0000 0007  0001 DISCARD   #1 words from top-of-stack
00DF FFF6 0007 0001  0526 JMPNT     0X00FD T = 0
00FD FFF6 0007 0001  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X0003
0101 FFF4 0003 0007  0001 PUSH      SB( 33) memory[EA = 0X0566] = 0X0001
0105 FFF2 0001 0003  0007 CMPI      0X0003 ? 0X0001 LEG = 001
0106 FFF6 0007 0001  0526 JMPE      0X0110 LEG = 001
0109 FFF6 0007 0001  0526 PUSH      #memory[EA = 0X010B] = 0X0000
010D FFF4 0000 0007  0001 JMP       0X0114
0114 FFF4 0000 0007  0001 SETT      T = 0
0115 FFF4 0000 0007  0001 DISCARD   #1 words from top-of-stack
0118 FFF6 0007 0001  0526 JMPNT     0X0136 T = 0
0136 FFF6 0007 0001  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X0003
013A FFF4 0003 0007  0001 PUSH      SB( 33) memory[EA = 0X0566] = 0X0001
013E FFF2 0001 0003  0007 CMPI      0X0003 ? 0X0001 LEG = 001
013F FFF6 0007 0001  0526 JMPG      0X0149 LEG = 001
0149 FFF6 0007 0001  0526 PUSH      #memory[EA = 0X014B] = 0XFFFF
014D FFF4 FFFF 0007  0001 SETT      T = 1
014E FFF4 FFFF 0007  0001 DISCARD   #1 words from top-of-stack
0151 FFF6 0007 0001  0526 JMPNT     0X016F T = 1
0154 FFF6 0007 0001  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X0003
0158 FFF4 0003 0007  0001 SVC       #11 write integer
015B FFF6 0007 0001  0526 PUSHA     SB( 67) memory[EA = 0X05AA]
015F FFF4 05AA 0007  0001 SVC       #51 write string
0162 FFF6 0007 0001  0526 PUSH      SB( 33) memory[EA = 0X0566] = 0X0001
0166 FFF4 0001 0007  0001 SVC       #11 write integer
3: 3 > 1
0169 FFF6 0007 0001  0526 SVC       #42 write ENDL
016C FFF6 0007 0001  0526 JMP       0X016F
016F FFF6 0007 0001  0526 PUSHA     SB( 32) memory[EA = 0X0564]
0173 FFF4 0564 0007  0001 PUSH      SB( 32) memory[EA = 0X0564] = 0X0003
0177 FFF2 0003 0564  0007 PUSH      #memory[EA = 0X0179] = 0X0001
017B FFF0 0001 0003  0564 ADDI      0X0004 = 0X0003 + 0X0001
017C FFF2 0004 0564  0007 MAKEDUP   duplicate 0X0004
017D FFF0 0004 0004  0564 POP       @SP(  2) memory[EA = 0X0564 = memory[0XFFF6]] = 0X0004
0181 FFF2 0004 0564  0007 SWAP      0X0564 <--> 0X0004
0182 FFF2 0564 0004  0007 DISCARD   #1 words from top-of-stack
0185 FFF4 0004 0007  0001 DISCARD   #1 words from top-of-stack
0188 FFF6 0007 0001  0526 PUSHA     SB( 33) memory[EA = 0X0566]
018C FFF4 0566 0007  0001 PUSH      SB( 33) memory[EA = 0X0566] = 0X0001
0190 FFF2 0001 0566  0007 PUSH      #memory[EA = 0X0192] = 0X0001
0194 FFF0 0001 0001  0566 SUBI      0X0000 = 0X0001 - 0X0001
0195 FFF2 0000 0566  0007 MAKEDUP   duplicate 0X0000
0196 FFF0 0000 0000  0566 POP       @SP(  2) memory[EA = 0X0566 = memory[0XFFF6]] = 0X0000
019A FFF2 0000 0566  0007 SWAP      0X0566 <--> 0X0000
019B FFF2 0566 0000  0007 DISCARD   #1 words from top-of-stack
019E FFF4 0000 0007  0001 DISCARD   #1 words from top-of-stack
01A1 FFF6 0007 0001  0526 SWAP      0X0001 <--> 0X0007
01A2 FFF6 0001 0007  0526 MAKEDUP   duplicate 0X0001
01A3 FFF4 0001 0001  0007 PUSH      @SP(  3) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0003
01A7 FFF2 0003 0001  0001 ADDI      0X0004 = 0X0001 + 0X0003
01A8 FFF4 0004 0001  0007 POP       @SP(  3) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0004
01AC FFF6 0001 0007  0526 JMP       0X0096
0096 FFF6 0001 0007  0526 SETNZPI   TOS = 0X0001 NZP = 001
0097 FFF6 0001 0007  0526 JMPN      0X00A8 NZP = 001
009A FFF6 0001 0007  0526 SWAP      0X0007 <--> 0X0001
009B FFF6 0007 0001  0526 MAKEDUP   duplicate 0X0007
009C FFF4 0007 0007  0001 PUSH      @SP(  3) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0004
00A0 FFF2 0004 0007  0007 SWAP      0X0007 <--> 0X0004
00A1 FFF2 0007 0004  0007 CMPI      0X0004 ? 0X0007 LEG = 100
00A2 FFF6 0007 0001  0526 JMPLE     0X00B6 LEG = 100
00B6 FFF6 0007 0001  0526 PUSH      SB(  1) memory[EA = 0X0526] = 0X0004
00BA FFF4 0004 0007  0001 SVC       #11 write integer
00BD FFF6 0007 0001  0526 PUSHA     SB( 53) memory[EA = 0X058E]
00C1 FFF4 058E 0007  0001 SVC       #51 write string
00C4 FFF6 0007 0001  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X0004
00C8 FFF4 0004 0007  0001 PUSH      SB( 33) memory[EA = 0X0566] = 0X0000
00CC FFF2 0000 0004  0007 CMPI      0X0004 ? 0X0000 LEG = 001
00CD FFF6 0007 0001  0526 JMPL      0X00D7 LEG = 001
00D0 FFF6 0007 0001  0526 PUSH      #memory[EA = 0X00D2] = 0X0000
00D4 FFF4 0000 0007  0001 JMP       0X00DB
00DB FFF4 0000 0007  0001 SETT      T = 0
00DC FFF4 0000 0007  0001 DISCARD   #1 words from top-of-stack
00DF FFF6 0007 0001  0526 JMPNT     0X00FD T = 0
00FD FFF6 0007 0001  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X0004
0101 FFF4 0004 0007  0001 PUSH      SB( 33) memory[EA = 0X0566] = 0X0000
0105 FFF2 0000 0004  0007 CMPI      0X0004 ? 0X0000 LEG = 001
0106 FFF6 0007 0001  0526 JMPE      0X0110 LEG = 001
0109 FFF6 0007 0001  0526 PUSH      #memory[EA = 0X010B] = 0X0000
010D FFF4 0000 0007  0001 JMP       0X0114
0114 FFF4 0000 0007  0001 SETT      T = 0
0115 FFF4 0000 0007  0001 DISCARD   #1 words from top-of-stack
0118 FFF6 0007 0001  0526 JMPNT     0X0136 T = 0
0136 FFF6 0007 0001  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X0004
013A FFF4 0004 0007  0001 PUSH      SB( 33) memory[EA = 0X0566] = 0X0000
013E FFF2 0000 0004  0007 CMPI      0X0004 ? 0X0000 LEG = 001
013F FFF6 0007 0001  0526 JMPG      0X0149 LEG = 001
0149 FFF6 0007 0001  0526 PUSH      #memory[EA = 0X014B] = 0XFFFF
014D FFF4 FFFF 0007  0001 SETT      T = 1
014E FFF4 FFFF 0007  0001 DISCARD   #1 words from top-of-stack
0151 FFF6 0007 0001  0526 JMPNT     0X016F T = 1
0154 FFF6 0007 0001  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X0004
0158 FFF4 0004 0007  0001 SVC       #11 write integer
015B FFF6 0007 0001  0526 PUSHA     SB( 67) memory[EA = 0X05AA]
015F FFF4 05AA 0007  0001 SVC       #51 write string
0162 FFF6 0007 0001  0526 PUSH      SB( 33) memory[EA = 0X0566] = 0X0000
0166 FFF4 0000 0007  0001 SVC       #11 write integer
4: 4 > 0
0169 FFF6 0007 0001  0526 SVC       #42 write ENDL
016C FFF6 0007 0001  0526 JMP       0X016F
016F FFF6 0007 0001  0526 PUSHA     SB( 32) memory[EA = 0X0564]
0173 FFF4 0564 0007  0001 PUSH      SB( 32) memory[EA = 0X0564] = 0X0004
0177 FFF2 0004 0564  0007 PUSH      #memory[EA = 0X0179] = 0X0001
017B FFF0 0001 0004  0564 ADDI      0X0005 = 0X0004 + 0X0001
017C FFF2 0005 0564  0007 MAKEDUP   duplicate 0X0005
017D FFF0 0005 0005  0564 POP       @SP(  2) memory[EA = 0X0564 = memory[0XFFF6]] = 0X0005
0181 FFF2 0005 0564  0007 SWAP      0X0564 <--> 0X0005
0182 FFF2 0564 0005  0007 DISCARD   #1 words from top-of-stack
0185 FFF4 0005 0007  0001 DISCARD   #1 words from top-of-stack
0188 FFF6 0007 0001  0526 PUSHA     SB( 33) memory[EA = 0X0566]
018C FFF4 0566 0007  0001 PUSH      SB( 33) memory[EA = 0X0566] = 0X0000
0190 FFF2 0000 0566  0007 PUSH      #memory[EA = 0X0192] = 0X0001
0194 FFF0 0001 0000  0566 SUBI      0XFFFF = 0X0000 - 0X0001
0195 FFF2 FFFF 0566  0007 MAKEDUP   duplicate 0XFFFF
0196 FFF0 FFFF FFFF  0566 POP       @SP(  2) memory[EA = 0X0566 = memory[0XFFF6]] = 0XFFFF
019A FFF2 FFFF 0566  0007 SWAP      0X0566 <--> 0XFFFF
019B FFF2 0566 FFFF  0007 DISCARD   #1 words from top-of-stack
019E FFF4 FFFF 0007  0001 DISCARD   #1 words from top-of-stack
01A1 FFF6 0007 0001  0526 SWAP      0X0001 <--> 0X0007
01A2 FFF6 0001 0007  0526 MAKEDUP   duplicate 0X0001
01A3 FFF4 0001 0001  0007 PUSH      @SP(  3) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0004
01A7 FFF2 0004 0001  0001 ADDI      0X0005 = 0X0001 + 0X0004
01A8 FFF4 0005 0001  0007 POP       @SP(  3) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0005
01AC FFF6 0001 0007  0526 JMP       0X0096
0096 FFF6 0001 0007  0526 SETNZPI   TOS = 0X0001 NZP = 001
0097 FFF6 0001 0007  0526 JMPN      0X00A8 NZP = 001
009A FFF6 0001 0007  0526 SWAP      0X0007 <--> 0X0001
009B FFF6 0007 0001  0526 MAKEDUP   duplicate 0X0007
009C FFF4 0007 0007  0001 PUSH      @SP(  3) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0005
00A0 FFF2 0005 0007  0007 SWAP      0X0007 <--> 0X0005
00A1 FFF2 0007 0005  0007 CMPI      0X0005 ? 0X0007 LEG = 100
00A2 FFF6 0007 0001  0526 JMPLE     0X00B6 LEG = 100
00B6 FFF6 0007 0001  0526 PUSH      SB(  1) memory[EA = 0X0526] = 0X0005
00BA FFF4 0005 0007  0001 SVC       #11 write integer
00BD FFF6 0007 0001  0526 PUSHA     SB( 53) memory[EA = 0X058E]
00C1 FFF4 058E 0007  0001 SVC       #51 write string
00C4 FFF6 0007 0001  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X0005
00C8 FFF4 0005 0007  0001 PUSH      SB( 33) memory[EA = 0X0566] = 0XFFFF
00CC FFF2 FFFF 0005  0007 CMPI      0X0005 ? 0XFFFF LEG = 001
00CD FFF6 0007 0001  0526 JMPL      0X00D7 LEG = 001
00D0 FFF6 0007 0001  0526 PUSH      #memory[EA = 0X00D2] = 0X0000
00D4 FFF4 0000 0007  0001 JMP       0X00DB
00DB FFF4 0000 0007  0001 SETT      T = 0
00DC FFF4 0000 0007  0001 DISCARD   #1 words from top-of-stack
00DF FFF6 0007 0001  0526 JMPNT     0X00FD T = 0
00FD FFF6 0007 0001  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X0005
0101 FFF4 0005 0007  0001 PUSH      SB( 33) memory[EA = 0X0566] = 0XFFFF
0105 FFF2 FFFF 0005  0007 CMPI      0X0005 ? 0XFFFF LEG = 001
0106 FFF6 0007 0001  0526 JMPE      0X0110 LEG = 001
0109 FFF6 0007 0001  0526 PUSH      #memory[EA = 0X010B] = 0X0000
010D FFF4 0000 0007  0001 JMP       0X0114
0114 FFF4 0000 0007  0001 SETT      T = 0
0115 FFF4 0000 0007  0001 DISCARD   #1 words from top-of-stack
0118 FFF6 0007 0001  0526 JMPNT     0X0136 T = 0
0136 FFF6 0007 0001  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X0005
013A FFF4 0005 0007  0001 PUSH      SB( 33) memory[EA = 0X0566] = 0XFFFF
013E FFF2 FFFF 0005  0007 CMPI      0X0005 ? 0XFFFF LEG = 001
013F FFF6 0007 0001  0526 JMPG      0X0149 LEG = 001
0149 FFF6 0007 0001  0526 PUSH      #memory[EA = 0X014B] = 0XFFFF
014D FFF4 FFFF 0007  0001 SETT      T = 1
014E FFF4 FFFF 0007  0001 DISCARD   #1 words from top-of-stack
0151 FFF6 0007 0001  0526 JMPNT     0X016F T = 1
0154 FFF6 0007 0001  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X0005
0158 FFF4 0005 0007  0001 SVC       #11 write integer
015B FFF6 0007 0001  0526 PUSHA     SB( 67) memory[EA = 0X05AA]
015F FFF4 05AA 0007  0001 SVC       #51 write string
0162 FFF6 0007 0001  0526 PUSH      SB( 33) memory[EA = 0X0566] = 0XFFFF
0166 FFF4 FFFF 0007  0001 SVC       #11 write integer
5: 5 > -1
0169 FFF6 0007 0001  0526 SVC       #42 write ENDL
016C FFF6 0007 0001  0526 JMP       0X016F
016F FFF6 0007 0001  0526 PUSHA     SB( 32) memory[EA = 0X0564]
0173 FFF4 0564 0007  0001 PUSH      SB( 32) memory[EA = 0X0564] = 0X0005
0177 FFF2 0005 0564  0007 PUSH      #memory[EA = 0X0179] = 0X0001
017B FFF0 0001 0005  0564 ADDI      0X0006 = 0X0005 + 0X0001
017C FFF2 0006 0564  0007 MAKEDUP   duplicate 0X0006
017D FFF0 0006 0006  0564 POP       @SP(  2) memory[EA = 0X0564 = memory[0XFFF6]] = 0X0006
0181 FFF2 0006 0564  0007 SWAP      0X0564 <--> 0X0006
0182 FFF2 0564 0006  0007 DISCARD   #1 words from top-of-stack
0185 FFF4 0006 0007  0001 DISCARD   #1 words from top-of-stack
0188 FFF6 0007 0001  0526 PUSHA     SB( 33) memory[EA = 0X0566]
018C FFF4 0566 0007  0001 PUSH      SB( 33) memory[EA = 0X0566] = 0XFFFF
0190 FFF2 FFFF 0566  0007 PUSH      #memory[EA = 0X0192] = 0X0001
0194 FFF0 0001 FFFF  0566 SUBI      0XFFFE = 0XFFFF - 0X0001
0195 FFF2 FFFE 0566  0007 MAKEDUP   duplicate 0XFFFE
0196 FFF0 FFFE FFFE  0566 POP       @SP(  2) memory[EA = 0X0566 = memory[0XFFF6]] = 0XFFFE
019A FFF2 FFFE 0566  0007 SWAP      0X0566 <--> 0XFFFE
019B FFF2 0566 FFFE  0007 DISCARD   #1 words from top-of-stack
019E FFF4 FFFE 0007  0001 DISCARD   #1 words from top-of-stack
01A1 FFF6 0007 0001  0526 SWAP      0X0001 <--> 0X0007
01A2 FFF6 0001 0007  0526 MAKEDUP   duplicate 0X0001
01A3 FFF4 0001 0001  0007 PUSH      @SP(  3) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0005
01A7 FFF2 0005 0001  0001 ADDI      0X0006 = 0X0001 + 0X0005
01A8 FFF4 0006 0001  0007 POP       @SP(  3) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0006
01AC FFF6 0001 0007  0526 JMP       0X0096
0096 FFF6 0001 0007  0526 SETNZPI   TOS = 0X0001 NZP = 001
0097 FFF6 0001 0007  0526 JMPN      0X00A8 NZP = 001
009A FFF6 0001 0007  0526 SWAP      0X0007 <--> 0X0001
009B FFF6 0007 0001  0526 MAKEDUP   duplicate 0X0007
009C FFF4 0007 0007  0001 PUSH      @SP(  3) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0006
00A0 FFF2 0006 0007  0007 SWAP      0X0007 <--> 0X0006
00A1 FFF2 0007 0006  0007 CMPI      0X0006 ? 0X0007 LEG = 100
00A2 FFF6 0007 0001  0526 JMPLE     0X00B6 LEG = 100
00B6 FFF6 0007 0001  0526 PUSH      SB(  1) memory[EA = 0X0526] = 0X0006
00BA FFF4 0006 0007  0001 SVC       #11 write integer
00BD FFF6 0007 0001  0526 PUSHA     SB( 53) memory[EA = 0X058E]
00C1 FFF4 058E 0007  0001 SVC       #51 write string
00C4 FFF6 0007 0001  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X0006
00C8 FFF4 0006 0007  0001 PUSH      SB( 33) memory[EA = 0X0566] = 0XFFFE
00CC FFF2 FFFE 0006  0007 CMPI      0X0006 ? 0XFFFE LEG = 001
00CD FFF6 0007 0001  0526 JMPL      0X00D7 LEG = 001
00D0 FFF6 0007 0001  0526 PUSH      #memory[EA = 0X00D2] = 0X0000
00D4 FFF4 0000 0007  0001 JMP       0X00DB
00DB FFF4 0000 0007  0001 SETT      T = 0
00DC FFF4 0000 0007  0001 DISCARD   #1 words from top-of-stack
00DF FFF6 0007 0001  0526 JMPNT     0X00FD T = 0
00FD FFF6 0007 0001  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X0006
0101 FFF4 0006 0007  0001 PUSH      SB( 33) memory[EA = 0X0566] = 0XFFFE
0105 FFF2 FFFE 0006  0007 CMPI      0X0006 ? 0XFFFE LEG = 001
0106 FFF6 0007 0001  0526 JMPE      0X0110 LEG = 001
0109 FFF6 0007 0001  0526 PUSH      #memory[EA = 0X010B] = 0X0000
010D FFF4 0000 0007  0001 JMP       0X0114
0114 FFF4 0000 0007  0001 SETT      T = 0
0115 FFF4 0000 0007  0001 DISCARD   #1 words from top-of-stack
0118 FFF6 0007 0001  0526 JMPNT     0X0136 T = 0
0136 FFF6 0007 0001  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X0006
013A FFF4 0006 0007  0001 PUSH      SB( 33) memory[EA = 0X0566] = 0XFFFE
013E FFF2 FFFE 0006  0007 CMPI      0X0006 ? 0XFFFE LEG = 001
013F FFF6 0007 0001  0526 JMPG      0X0149 LEG = 001
0149 FFF6 0007 0001  0526 PUSH      #memory[EA = 0X014B] = 0XFFFF
014D FFF4 FFFF 0007  0001 SETT      T = 1
014E FFF4 FFFF 0007  0001 DISCARD   #1 words from top-of-stack
0151 FFF6 0007 0001  0526 JMPNT     0X016F T = 1
0154 FFF6 0007 0001  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X0006
0158 FFF4 0006 0007  0001 SVC       #11 write integer
015B FFF6 0007 0001  0526 PUSHA     SB( 67) memory[EA = 0X05AA]
015F FFF4 05AA 0007  0001 SVC       #51 write string
0162 FFF6 0007 0001  0526 PUSH      SB( 33) memory[EA = 0X0566] = 0XFFFE
0166 FFF4 FFFE 0007  0001 SVC       #11 write integer
6: 6 > -2
0169 FFF6 0007 0001  0526 SVC       #42 write ENDL
016C FFF6 0007 0001  0526 JMP       0X016F
016F FFF6 0007 0001  0526 PUSHA     SB( 32) memory[EA = 0X0564]
0173 FFF4 0564 0007  0001 PUSH      SB( 32) memory[EA = 0X0564] = 0X0006
0177 FFF2 0006 0564  0007 PUSH      #memory[EA = 0X0179] = 0X0001
017B FFF0 0001 0006  0564 ADDI      0X0007 = 0X0006 + 0X0001
017C FFF2 0007 0564  0007 MAKEDUP   duplicate 0X0007
017D FFF0 0007 0007  0564 POP       @SP(  2) memory[EA = 0X0564 = memory[0XFFF6]] = 0X0007
0181 FFF2 0007 0564  0007 SWAP      0X0564 <--> 0X0007
0182 FFF2 0564 0007  0007 DISCARD   #1 words from top-of-stack
0185 FFF4 0007 0007  0001 DISCARD   #1 words from top-of-stack
0188 FFF6 0007 0001  0526 PUSHA     SB( 33) memory[EA = 0X0566]
018C FFF4 0566 0007  0001 PUSH      SB( 33) memory[EA = 0X0566] = 0XFFFE
0190 FFF2 FFFE 0566  0007 PUSH      #memory[EA = 0X0192] = 0X0001
0194 FFF0 0001 FFFE  0566 SUBI      0XFFFD = 0XFFFE - 0X0001
0195 FFF2 FFFD 0566  0007 MAKEDUP   duplicate 0XFFFD
0196 FFF0 FFFD FFFD  0566 POP       @SP(  2) memory[EA = 0X0566 = memory[0XFFF6]] = 0XFFFD
019A FFF2 FFFD 0566  0007 SWAP      0X0566 <--> 0XFFFD
019B FFF2 0566 FFFD  0007 DISCARD   #1 words from top-of-stack
019E FFF4 FFFD 0007  0001 DISCARD   #1 words from top-of-stack
01A1 FFF6 0007 0001  0526 SWAP      0X0001 <--> 0X0007
01A2 FFF6 0001 0007  0526 MAKEDUP   duplicate 0X0001
01A3 FFF4 0001 0001  0007 PUSH      @SP(  3) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0006
01A7 FFF2 0006 0001  0001 ADDI      0X0007 = 0X0001 + 0X0006
01A8 FFF4 0007 0001  0007 POP       @SP(  3) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0007
01AC FFF6 0001 0007  0526 JMP       0X0096
0096 FFF6 0001 0007  0526 SETNZPI   TOS = 0X0001 NZP = 001
0097 FFF6 0001 0007  0526 JMPN      0X00A8 NZP = 001
009A FFF6 0001 0007  0526 SWAP      0X0007 <--> 0X0001
009B FFF6 0007 0001  0526 MAKEDUP   duplicate 0X0007
009C FFF4 0007 0007  0001 PUSH      @SP(  3) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0007
00A0 FFF2 0007 0007  0007 SWAP      0X0007 <--> 0X0007
00A1 FFF2 0007 0007  0007 CMPI      0X0007 ? 0X0007 LEG = 010
00A2 FFF6 0007 0001  0526 JMPLE     0X00B6 LEG = 010
00B6 FFF6 0007 0001  0526 PUSH      SB(  1) memory[EA = 0X0526] = 0X0007
00BA FFF4 0007 0007  0001 SVC       #11 write integer
00BD FFF6 0007 0001  0526 PUSHA     SB( 53) memory[EA = 0X058E]
00C1 FFF4 058E 0007  0001 SVC       #51 write string
00C4 FFF6 0007 0001  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X0007
00C8 FFF4 0007 0007  0001 PUSH      SB( 33) memory[EA = 0X0566] = 0XFFFD
00CC FFF2 FFFD 0007  0007 CMPI      0X0007 ? 0XFFFD LEG = 001
00CD FFF6 0007 0001  0526 JMPL      0X00D7 LEG = 001
00D0 FFF6 0007 0001  0526 PUSH      #memory[EA = 0X00D2] = 0X0000
00D4 FFF4 0000 0007  0001 JMP       0X00DB
00DB FFF4 0000 0007  0001 SETT      T = 0
00DC FFF4 0000 0007  0001 DISCARD   #1 words from top-of-stack
00DF FFF6 0007 0001  0526 JMPNT     0X00FD T = 0
00FD FFF6 0007 0001  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X0007
0101 FFF4 0007 0007  0001 PUSH      SB( 33) memory[EA = 0X0566] = 0XFFFD
0105 FFF2 FFFD 0007  0007 CMPI      0X0007 ? 0XFFFD LEG = 001
0106 FFF6 0007 0001  0526 JMPE      0X0110 LEG = 001
0109 FFF6 0007 0001  0526 PUSH      #memory[EA = 0X010B] = 0X0000
010D FFF4 0000 0007  0001 JMP       0X0114
0114 FFF4 0000 0007  0001 SETT      T = 0
0115 FFF4 0000 0007  0001 DISCARD   #1 words from top-of-stack
0118 FFF6 0007 0001  0526 JMPNT     0X0136 T = 0
0136 FFF6 0007 0001  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X0007
013A FFF4 0007 0007  0001 PUSH      SB( 33) memory[EA = 0X0566] = 0XFFFD
013E FFF2 FFFD 0007  0007 CMPI      0X0007 ? 0XFFFD LEG = 001
013F FFF6 0007 0001  0526 JMPG      0X0149 LEG = 001
0149 FFF6 0007 0001  0526 PUSH      #memory[EA = 0X014B] = 0XFFFF
014D FFF4 FFFF 0007  0001 SETT      T = 1
014E FFF4 FFFF 0007  0001 DISCARD   #1 words from top-of-stack
0151 FFF6 0007 0001  0526 JMPNT     0X016F T = 1
0154 FFF6 0007 0001  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X0007
0158 FFF4 0007 0007  0001 SVC       #11 write integer
015B FFF6 0007 0001  0526 PUSHA     SB( 67) memory[EA = 0X05AA]
015F FFF4 05AA 0007  0001 SVC       #51 write string
0162 FFF6 0007 0001  0526 PUSH      SB( 33) memory[EA = 0X0566] = 0XFFFD
0166 FFF4 FFFD 0007  0001 SVC       #11 write integer
7: 7 > -3
0169 FFF6 0007 0001  0526 SVC       #42 write ENDL
016C FFF6 0007 0001  0526 JMP       0X016F
016F FFF6 0007 0001  0526 PUSHA     SB( 32) memory[EA = 0X0564]
0173 FFF4 0564 0007  0001 PUSH      SB( 32) memory[EA = 0X0564] = 0X0007
0177 FFF2 0007 0564  0007 PUSH      #memory[EA = 0X0179] = 0X0001
017B FFF0 0001 0007  0564 ADDI      0X0008 = 0X0007 + 0X0001
017C FFF2 0008 0564  0007 MAKEDUP   duplicate 0X0008
017D FFF0 0008 0008  0564 POP       @SP(  2) memory[EA = 0X0564 = memory[0XFFF6]] = 0X0008
0181 FFF2 0008 0564  0007 SWAP      0X0564 <--> 0X0008
0182 FFF2 0564 0008  0007 DISCARD   #1 words from top-of-stack
0185 FFF4 0008 0007  0001 DISCARD   #1 words from top-of-stack
0188 FFF6 0007 0001  0526 PUSHA     SB( 33) memory[EA = 0X0566]
018C FFF4 0566 0007  0001 PUSH      SB( 33) memory[EA = 0X0566] = 0XFFFD
0190 FFF2 FFFD 0566  0007 PUSH      #memory[EA = 0X0192] = 0X0001
0194 FFF0 0001 FFFD  0566 SUBI      0XFFFC = 0XFFFD - 0X0001
0195 FFF2 FFFC 0566  0007 MAKEDUP   duplicate 0XFFFC
0196 FFF0 FFFC FFFC  0566 POP       @SP(  2) memory[EA = 0X0566 = memory[0XFFF6]] = 0XFFFC
019A FFF2 FFFC 0566  0007 SWAP      0X0566 <--> 0XFFFC
019B FFF2 0566 FFFC  0007 DISCARD   #1 words from top-of-stack
019E FFF4 FFFC 0007  0001 DISCARD   #1 words from top-of-stack
01A1 FFF6 0007 0001  0526 SWAP      0X0001 <--> 0X0007
01A2 FFF6 0001 0007  0526 MAKEDUP   duplicate 0X0001
01A3 FFF4 0001 0001  0007 PUSH      @SP(  3) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0007
01A7 FFF2 0007 0001  0001 ADDI      0X0008 = 0X0001 + 0X0007
01A8 FFF4 0008 0001  0007 POP       @SP(  3) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0008
01AC FFF6 0001 0007  0526 JMP       0X0096
0096 FFF6 0001 0007  0526 SETNZPI   TOS = 0X0001 NZP = 001
0097 FFF6 0001 0007  0526 JMPN      0X00A8 NZP = 001
009A FFF6 0001 0007  0526 SWAP      0X0007 <--> 0X0001
009B FFF6 0007 0001  0526 MAKEDUP   duplicate 0X0007
009C FFF4 0007 0007  0001 PUSH      @SP(  3) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0008
00A0 FFF2 0008 0007  0007 SWAP      0X0007 <--> 0X0008
00A1 FFF2 0007 0008  0007 CMPI      0X0008 ? 0X0007 LEG = 001
00A2 FFF6 0007 0001  0526 JMPLE     0X00B6 LEG = 001
00A5 FFF6 0007 0001  0526 JMP       0X01AF
01AF FFF6 0007 0001  0526 DISCARD   #3 words from top-of-stack
01B2 FFFC 001B            PUSHA     SB( 72) memory[EA = 0X05B4]
01B6 FFFA 05B4 001B       SVC       #51 write string
For-loop (2)
01B9 FFFC 001B            SVC       #42 write ENDL
01BC FFFC 001B            PUSHA     SB( 32) memory[EA = 0X0564]
01C0 FFFA 0564 001B       PUSH      SB(  0) memory[EA = 0X0524] = 0X0001
01C4 FFF8 0001 0564  001B MAKEDUP   duplicate 0X0001
01C5 FFF6 0001 0001  0564 POP       @SP(  2) memory[EA = 0X0564 = memory[0XFFFC]] = 0X0001
01C9 FFF8 0001 0564  001B SWAP      0X0564 <--> 0X0001
01CA FFF8 0564 0001  001B DISCARD   #1 words from top-of-stack
01CD FFFA 0001 001B       DISCARD   #1 words from top-of-stack
01D0 FFFC 001B            PUSHA     SB( 33) memory[EA = 0X0566]
01D4 FFFA 0566 001B       PUSH      SB( 30) memory[EA = 0X0560] = 0X0003
01D8 FFF8 0003 0566  001B MAKEDUP   duplicate 0X0003
01D9 FFF6 0003 0003  0566 POP       @SP(  2) memory[EA = 0X0566 = memory[0XFFFC]] = 0X0003
01DD FFF8 0003 0566  001B SWAP      0X0566 <--> 0X0003
01DE FFF8 0566 0003  001B DISCARD   #1 words from top-of-stack
01E1 FFFA 0003 001B       DISCARD   #1 words from top-of-stack
01E4 FFFC 001B            PUSHA     SB(  1) memory[EA = 0X0526]
01E8 FFFA 0526 001B       PUSH      #memory[EA = 0X01EA] = 0X0001
01EC FFF8 0001 0526  001B POP       @SP(  1) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0001
01F0 FFFA 0526 001B       PUSH      SB( 31) memory[EA = 0X0562] = 0X0007
01F4 FFF8 0007 0526  001B PUSH      #memory[EA = 0X01F6] = 0X0001
01F8 FFF6 0001 0007  0526 SETNZPI   TOS = 0X0001 NZP = 001
01F9 FFF6 0001 0007  0526 JMPNZ     0X0207 NZP = 001
0207 FFF6 0001 0007  0526 SETNZPI   TOS = 0X0001 NZP = 001
0208 FFF6 0001 0007  0526 JMPN      0X0219 NZP = 001
020B FFF6 0001 0007  0526 SWAP      0X0007 <--> 0X0001
020C FFF6 0007 0001  0526 MAKEDUP   duplicate 0X0007
020D FFF4 0007 0007  0001 PUSH      @SP(  3) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0001
0211 FFF2 0001 0007  0007 SWAP      0X0007 <--> 0X0001
0212 FFF2 0007 0001  0007 CMPI      0X0001 ? 0X0007 LEG = 100
0213 FFF6 0007 0001  0526 JMPLE     0X0227 LEG = 100
0227 FFF6 0007 0001  0526 PUSH      SB(  1) memory[EA = 0X0526] = 0X0001
022B FFF4 0001 0007  0001 SVC       #11 write integer
022E FFF6 0007 0001  0526 PUSHA     SB( 86) memory[EA = 0X05D0]
0232 FFF4 05D0 0007  0001 SVC       #51 write string
0235 FFF6 0007 0001  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X0001
0239 FFF4 0001 0007  0001 PUSH      SB( 33) memory[EA = 0X0566] = 0X0003
023D FFF2 0003 0001  0007 CMPI      0X0001 ? 0X0003 LEG = 100
023E FFF6 0007 0001  0526 JMPL      0X0248 LEG = 100
0248 FFF6 0007 0001  0526 PUSH      #memory[EA = 0X024A] = 0XFFFF
024C FFF4 FFFF 0007  0001 SETT      T = 1
024D FFF4 FFFF 0007  0001 DISCARD   #1 words from top-of-stack
0250 FFF6 0007 0001  0526 JMPNT     0X026E T = 1
0253 FFF6 0007 0001  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X0001
0257 FFF4 0001 0007  0001 SVC       #11 write integer
025A FFF6 0007 0001  0526 PUSHA     SB( 90) memory[EA = 0X05D8]
025E FFF4 05D8 0007  0001 SVC       #51 write string
0261 FFF6 0007 0001  0526 PUSH      SB( 33) memory[EA = 0X0566] = 0X0003
0265 FFF4 0003 0007  0001 SVC       #11 write integer
1: 1 < 3
0268 FFF6 0007 0001  0526 SVC       #42 write ENDL
026B FFF6 0007 0001  0526 JMP       0X02E0
02E0 FFF6 0007 0001  0526 PUSHA     SB( 32) memory[EA = 0X0564]
02E4 FFF4 0564 0007  0001 PUSH      SB( 32) memory[EA = 0X0564] = 0X0001
02E8 FFF2 0001 0564  0007 PUSH      #memory[EA = 0X02EA] = 0X0002
02EC FFF0 0002 0001  0564 ADDI      0X0003 = 0X0001 + 0X0002
02ED FFF2 0003 0564  0007 MAKEDUP   duplicate 0X0003
02EE FFF0 0003 0003  0564 POP       @SP(  2) memory[EA = 0X0564 = memory[0XFFF6]] = 0X0003
02F2 FFF2 0003 0564  0007 SWAP      0X0564 <--> 0X0003
02F3 FFF2 0564 0003  0007 DISCARD   #1 words from top-of-stack
02F6 FFF4 0003 0007  0001 DISCARD   #1 words from top-of-stack
02F9 FFF6 0007 0001  0526 PUSHA     SB( 33) memory[EA = 0X0566]
02FD FFF4 0566 0007  0001 PUSH      SB( 33) memory[EA = 0X0566] = 0X0003
0301 FFF2 0003 0566  0007 PUSH      #memory[EA = 0X0303] = 0X0002
0305 FFF0 0002 0003  0566 SUBI      0X0001 = 0X0003 - 0X0002
0306 FFF2 0001 0566  0007 MAKEDUP   duplicate 0X0001
0307 FFF0 0001 0001  0566 POP       @SP(  2) memory[EA = 0X0566 = memory[0XFFF6]] = 0X0001
030B FFF2 0001 0566  0007 SWAP      0X0566 <--> 0X0001
030C FFF2 0566 0001  0007 DISCARD   #1 words from top-of-stack
030F FFF4 0001 0007  0001 DISCARD   #1 words from top-of-stack
0312 FFF6 0007 0001  0526 SWAP      0X0001 <--> 0X0007
0313 FFF6 0001 0007  0526 MAKEDUP   duplicate 0X0001
0314 FFF4 0001 0001  0007 PUSH      @SP(  3) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0001
0318 FFF2 0001 0001  0001 ADDI      0X0002 = 0X0001 + 0X0001
0319 FFF4 0002 0001  0007 POP       @SP(  3) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0002
031D FFF6 0001 0007  0526 JMP       0X0207
0207 FFF6 0001 0007  0526 SETNZPI   TOS = 0X0001 NZP = 001
0208 FFF6 0001 0007  0526 JMPN      0X0219 NZP = 001
020B FFF6 0001 0007  0526 SWAP      0X0007 <--> 0X0001
020C FFF6 0007 0001  0526 MAKEDUP   duplicate 0X0007
020D FFF4 0007 0007  0001 PUSH      @SP(  3) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0002
0211 FFF2 0002 0007  0007 SWAP      0X0007 <--> 0X0002
0212 FFF2 0007 0002  0007 CMPI      0X0002 ? 0X0007 LEG = 100
0213 FFF6 0007 0001  0526 JMPLE     0X0227 LEG = 100
0227 FFF6 0007 0001  0526 PUSH      SB(  1) memory[EA = 0X0526] = 0X0002
022B FFF4 0002 0007  0001 SVC       #11 write integer
022E FFF6 0007 0001  0526 PUSHA     SB( 86) memory[EA = 0X05D0]
0232 FFF4 05D0 0007  0001 SVC       #51 write string
0235 FFF6 0007 0001  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X0003
0239 FFF4 0003 0007  0001 PUSH      SB( 33) memory[EA = 0X0566] = 0X0001
023D FFF2 0001 0003  0007 CMPI      0X0003 ? 0X0001 LEG = 001
023E FFF6 0007 0001  0526 JMPL      0X0248 LEG = 001
0241 FFF6 0007 0001  0526 PUSH      #memory[EA = 0X0243] = 0X0000
0245 FFF4 0000 0007  0001 JMP       0X024C
024C FFF4 0000 0007  0001 SETT      T = 0
024D FFF4 0000 0007  0001 DISCARD   #1 words from top-of-stack
0250 FFF6 0007 0001  0526 JMPNT     0X026E T = 0
026E FFF6 0007 0001  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X0003
0272 FFF4 0003 0007  0001 PUSH      SB( 33) memory[EA = 0X0566] = 0X0001
0276 FFF2 0001 0003  0007 CMPI      0X0003 ? 0X0001 LEG = 001
0277 FFF6 0007 0001  0526 JMPE      0X0281 LEG = 001
027A FFF6 0007 0001  0526 PUSH      #memory[EA = 0X027C] = 0X0000
027E FFF4 0000 0007  0001 JMP       0X0285
0285 FFF4 0000 0007  0001 SETT      T = 0
0286 FFF4 0000 0007  0001 DISCARD   #1 words from top-of-stack
0289 FFF6 0007 0001  0526 JMPNT     0X02A7 T = 0
02A7 FFF6 0007 0001  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X0003
02AB FFF4 0003 0007  0001 PUSH      SB( 33) memory[EA = 0X0566] = 0X0001
02AF FFF2 0001 0003  0007 CMPI      0X0003 ? 0X0001 LEG = 001
02B0 FFF6 0007 0001  0526 JMPG      0X02BA LEG = 001
02BA FFF6 0007 0001  0526 PUSH      #memory[EA = 0X02BC] = 0XFFFF
02BE FFF4 FFFF 0007  0001 SETT      T = 1
02BF FFF4 FFFF 0007  0001 DISCARD   #1 words from top-of-stack
02C2 FFF6 0007 0001  0526 JMPNT     0X02E0 T = 1
02C5 FFF6 0007 0001  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X0003
02C9 FFF4 0003 0007  0001 SVC       #11 write integer
02CC FFF6 0007 0001  0526 PUSHA     SB(100) memory[EA = 0X05EC]
02D0 FFF4 05EC 0007  0001 SVC       #51 write string
02D3 FFF6 0007 0001  0526 PUSH      SB( 33) memory[EA = 0X0566] = 0X0001
02D7 FFF4 0001 0007  0001 SVC       #11 write integer
2: 3 > 1
02DA FFF6 0007 0001  0526 SVC       #42 write ENDL
02DD FFF6 0007 0001  0526 JMP       0X02E0
02E0 FFF6 0007 0001  0526 PUSHA     SB( 32) memory[EA = 0X0564]
02E4 FFF4 0564 0007  0001 PUSH      SB( 32) memory[EA = 0X0564] = 0X0003
02E8 FFF2 0003 0564  0007 PUSH      #memory[EA = 0X02EA] = 0X0002
02EC FFF0 0002 0003  0564 ADDI      0X0005 = 0X0003 + 0X0002
02ED FFF2 0005 0564  0007 MAKEDUP   duplicate 0X0005
02EE FFF0 0005 0005  0564 POP       @SP(  2) memory[EA = 0X0564 = memory[0XFFF6]] = 0X0005
02F2 FFF2 0005 0564  0007 SWAP      0X0564 <--> 0X0005
02F3 FFF2 0564 0005  0007 DISCARD   #1 words from top-of-stack
02F6 FFF4 0005 0007  0001 DISCARD   #1 words from top-of-stack
02F9 FFF6 0007 0001  0526 PUSHA     SB( 33) memory[EA = 0X0566]
02FD FFF4 0566 0007  0001 PUSH      SB( 33) memory[EA = 0X0566] = 0X0001
0301 FFF2 0001 0566  0007 PUSH      #memory[EA = 0X0303] = 0X0002
0305 FFF0 0002 0001  0566 SUBI      0XFFFF = 0X0001 - 0X0002
0306 FFF2 FFFF 0566  0007 MAKEDUP   duplicate 0XFFFF
0307 FFF0 FFFF FFFF  0566 POP       @SP(  2) memory[EA = 0X0566 = memory[0XFFF6]] = 0XFFFF
030B FFF2 FFFF 0566  0007 SWAP      0X0566 <--> 0XFFFF
030C FFF2 0566 FFFF  0007 DISCARD   #1 words from top-of-stack
030F FFF4 FFFF 0007  0001 DISCARD   #1 words from top-of-stack
0312 FFF6 0007 0001  0526 SWAP      0X0001 <--> 0X0007
0313 FFF6 0001 0007  0526 MAKEDUP   duplicate 0X0001
0314 FFF4 0001 0001  0007 PUSH      @SP(  3) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0002
0318 FFF2 0002 0001  0001 ADDI      0X0003 = 0X0001 + 0X0002
0319 FFF4 0003 0001  0007 POP       @SP(  3) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0003
031D FFF6 0001 0007  0526 JMP       0X0207
0207 FFF6 0001 0007  0526 SETNZPI   TOS = 0X0001 NZP = 001
0208 FFF6 0001 0007  0526 JMPN      0X0219 NZP = 001
020B FFF6 0001 0007  0526 SWAP      0X0007 <--> 0X0001
020C FFF6 0007 0001  0526 MAKEDUP   duplicate 0X0007
020D FFF4 0007 0007  0001 PUSH      @SP(  3) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0003
0211 FFF2 0003 0007  0007 SWAP      0X0007 <--> 0X0003
0212 FFF2 0007 0003  0007 CMPI      0X0003 ? 0X0007 LEG = 100
0213 FFF6 0007 0001  0526 JMPLE     0X0227 LEG = 100
0227 FFF6 0007 0001  0526 PUSH      SB(  1) memory[EA = 0X0526] = 0X0003
022B FFF4 0003 0007  0001 SVC       #11 write integer
022E FFF6 0007 0001  0526 PUSHA     SB( 86) memory[EA = 0X05D0]
0232 FFF4 05D0 0007  0001 SVC       #51 write string
0235 FFF6 0007 0001  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X0005
0239 FFF4 0005 0007  0001 PUSH      SB( 33) memory[EA = 0X0566] = 0XFFFF
023D FFF2 FFFF 0005  0007 CMPI      0X0005 ? 0XFFFF LEG = 001
023E FFF6 0007 0001  0526 JMPL      0X0248 LEG = 001
0241 FFF6 0007 0001  0526 PUSH      #memory[EA = 0X0243] = 0X0000
0245 FFF4 0000 0007  0001 JMP       0X024C
024C FFF4 0000 0007  0001 SETT      T = 0
024D FFF4 0000 0007  0001 DISCARD   #1 words from top-of-stack
0250 FFF6 0007 0001  0526 JMPNT     0X026E T = 0
026E FFF6 0007 0001  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X0005
0272 FFF4 0005 0007  0001 PUSH      SB( 33) memory[EA = 0X0566] = 0XFFFF
0276 FFF2 FFFF 0005  0007 CMPI      0X0005 ? 0XFFFF LEG = 001
0277 FFF6 0007 0001  0526 JMPE      0X0281 LEG = 001
027A FFF6 0007 0001  0526 PUSH      #memory[EA = 0X027C] = 0X0000
027E FFF4 0000 0007  0001 JMP       0X0285
0285 FFF4 0000 0007  0001 SETT      T = 0
0286 FFF4 0000 0007  0001 DISCARD   #1 words from top-of-stack
0289 FFF6 0007 0001  0526 JMPNT     0X02A7 T = 0
02A7 FFF6 0007 0001  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X0005
02AB FFF4 0005 0007  0001 PUSH      SB( 33) memory[EA = 0X0566] = 0XFFFF
02AF FFF2 FFFF 0005  0007 CMPI      0X0005 ? 0XFFFF LEG = 001
02B0 FFF6 0007 0001  0526 JMPG      0X02BA LEG = 001
02BA FFF6 0007 0001  0526 PUSH      #memory[EA = 0X02BC] = 0XFFFF
02BE FFF4 FFFF 0007  0001 SETT      T = 1
02BF FFF4 FFFF 0007  0001 DISCARD   #1 words from top-of-stack
02C2 FFF6 0007 0001  0526 JMPNT     0X02E0 T = 1
02C5 FFF6 0007 0001  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X0005
02C9 FFF4 0005 0007  0001 SVC       #11 write integer
02CC FFF6 0007 0001  0526 PUSHA     SB(100) memory[EA = 0X05EC]
02D0 FFF4 05EC 0007  0001 SVC       #51 write string
02D3 FFF6 0007 0001  0526 PUSH      SB( 33) memory[EA = 0X0566] = 0XFFFF
02D7 FFF4 FFFF 0007  0001 SVC       #11 write integer
3: 5 > -1
02DA FFF6 0007 0001  0526 SVC       #42 write ENDL
02DD FFF6 0007 0001  0526 JMP       0X02E0
02E0 FFF6 0007 0001  0526 PUSHA     SB( 32) memory[EA = 0X0564]
02E4 FFF4 0564 0007  0001 PUSH      SB( 32) memory[EA = 0X0564] = 0X0005
02E8 FFF2 0005 0564  0007 PUSH      #memory[EA = 0X02EA] = 0X0002
02EC FFF0 0002 0005  0564 ADDI      0X0007 = 0X0005 + 0X0002
02ED FFF2 0007 0564  0007 MAKEDUP   duplicate 0X0007
02EE FFF0 0007 0007  0564 POP       @SP(  2) memory[EA = 0X0564 = memory[0XFFF6]] = 0X0007
02F2 FFF2 0007 0564  0007 SWAP      0X0564 <--> 0X0007
02F3 FFF2 0564 0007  0007 DISCARD   #1 words from top-of-stack
02F6 FFF4 0007 0007  0001 DISCARD   #1 words from top-of-stack
02F9 FFF6 0007 0001  0526 PUSHA     SB( 33) memory[EA = 0X0566]
02FD FFF4 0566 0007  0001 PUSH      SB( 33) memory[EA = 0X0566] = 0XFFFF
0301 FFF2 FFFF 0566  0007 PUSH      #memory[EA = 0X0303] = 0X0002
0305 FFF0 0002 FFFF  0566 SUBI      0XFFFD = 0XFFFF - 0X0002
0306 FFF2 FFFD 0566  0007 MAKEDUP   duplicate 0XFFFD
0307 FFF0 FFFD FFFD  0566 POP       @SP(  2) memory[EA = 0X0566 = memory[0XFFF6]] = 0XFFFD
030B FFF2 FFFD 0566  0007 SWAP      0X0566 <--> 0XFFFD
030C FFF2 0566 FFFD  0007 DISCARD   #1 words from top-of-stack
030F FFF4 FFFD 0007  0001 DISCARD   #1 words from top-of-stack
0312 FFF6 0007 0001  0526 SWAP      0X0001 <--> 0X0007
0313 FFF6 0001 0007  0526 MAKEDUP   duplicate 0X0001
0314 FFF4 0001 0001  0007 PUSH      @SP(  3) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0003
0318 FFF2 0003 0001  0001 ADDI      0X0004 = 0X0001 + 0X0003
0319 FFF4 0004 0001  0007 POP       @SP(  3) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0004
031D FFF6 0001 0007  0526 JMP       0X0207
0207 FFF6 0001 0007  0526 SETNZPI   TOS = 0X0001 NZP = 001
0208 FFF6 0001 0007  0526 JMPN      0X0219 NZP = 001
020B FFF6 0001 0007  0526 SWAP      0X0007 <--> 0X0001
020C FFF6 0007 0001  0526 MAKEDUP   duplicate 0X0007
020D FFF4 0007 0007  0001 PUSH      @SP(  3) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0004
0211 FFF2 0004 0007  0007 SWAP      0X0007 <--> 0X0004
0212 FFF2 0007 0004  0007 CMPI      0X0004 ? 0X0007 LEG = 100
0213 FFF6 0007 0001  0526 JMPLE     0X0227 LEG = 100
0227 FFF6 0007 0001  0526 PUSH      SB(  1) memory[EA = 0X0526] = 0X0004
022B FFF4 0004 0007  0001 SVC       #11 write integer
022E FFF6 0007 0001  0526 PUSHA     SB( 86) memory[EA = 0X05D0]
0232 FFF4 05D0 0007  0001 SVC       #51 write string
0235 FFF6 0007 0001  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X0007
0239 FFF4 0007 0007  0001 PUSH      SB( 33) memory[EA = 0X0566] = 0XFFFD
023D FFF2 FFFD 0007  0007 CMPI      0X0007 ? 0XFFFD LEG = 001
023E FFF6 0007 0001  0526 JMPL      0X0248 LEG = 001
0241 FFF6 0007 0001  0526 PUSH      #memory[EA = 0X0243] = 0X0000
0245 FFF4 0000 0007  0001 JMP       0X024C
024C FFF4 0000 0007  0001 SETT      T = 0
024D FFF4 0000 0007  0001 DISCARD   #1 words from top-of-stack
0250 FFF6 0007 0001  0526 JMPNT     0X026E T = 0
026E FFF6 0007 0001  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X0007
0272 FFF4 0007 0007  0001 PUSH      SB( 33) memory[EA = 0X0566] = 0XFFFD
0276 FFF2 FFFD 0007  0007 CMPI      0X0007 ? 0XFFFD LEG = 001
0277 FFF6 0007 0001  0526 JMPE      0X0281 LEG = 001
027A FFF6 0007 0001  0526 PUSH      #memory[EA = 0X027C] = 0X0000
027E FFF4 0000 0007  0001 JMP       0X0285
0285 FFF4 0000 0007  0001 SETT      T = 0
0286 FFF4 0000 0007  0001 DISCARD   #1 words from top-of-stack
0289 FFF6 0007 0001  0526 JMPNT     0X02A7 T = 0
02A7 FFF6 0007 0001  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X0007
02AB FFF4 0007 0007  0001 PUSH      SB( 33) memory[EA = 0X0566] = 0XFFFD
02AF FFF2 FFFD 0007  0007 CMPI      0X0007 ? 0XFFFD LEG = 001
02B0 FFF6 0007 0001  0526 JMPG      0X02BA LEG = 001
02BA FFF6 0007 0001  0526 PUSH      #memory[EA = 0X02BC] = 0XFFFF
02BE FFF4 FFFF 0007  0001 SETT      T = 1
02BF FFF4 FFFF 0007  0001 DISCARD   #1 words from top-of-stack
02C2 FFF6 0007 0001  0526 JMPNT     0X02E0 T = 1
02C5 FFF6 0007 0001  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X0007
02C9 FFF4 0007 0007  0001 SVC       #11 write integer
02CC FFF6 0007 0001  0526 PUSHA     SB(100) memory[EA = 0X05EC]
02D0 FFF4 05EC 0007  0001 SVC       #51 write string
02D3 FFF6 0007 0001  0526 PUSH      SB( 33) memory[EA = 0X0566] = 0XFFFD
02D7 FFF4 FFFD 0007  0001 SVC       #11 write integer
4: 7 > -3
02DA FFF6 0007 0001  0526 SVC       #42 write ENDL
02DD FFF6 0007 0001  0526 JMP       0X02E0
02E0 FFF6 0007 0001  0526 PUSHA     SB( 32) memory[EA = 0X0564]
02E4 FFF4 0564 0007  0001 PUSH      SB( 32) memory[EA = 0X0564] = 0X0007
02E8 FFF2 0007 0564  0007 PUSH      #memory[EA = 0X02EA] = 0X0002
02EC FFF0 0002 0007  0564 ADDI      0X0009 = 0X0007 + 0X0002
02ED FFF2 0009 0564  0007 MAKEDUP   duplicate 0X0009
02EE FFF0 0009 0009  0564 POP       @SP(  2) memory[EA = 0X0564 = memory[0XFFF6]] = 0X0009
02F2 FFF2 0009 0564  0007 SWAP      0X0564 <--> 0X0009
02F3 FFF2 0564 0009  0007 DISCARD   #1 words from top-of-stack
02F6 FFF4 0009 0007  0001 DISCARD   #1 words from top-of-stack
02F9 FFF6 0007 0001  0526 PUSHA     SB( 33) memory[EA = 0X0566]
02FD FFF4 0566 0007  0001 PUSH      SB( 33) memory[EA = 0X0566] = 0XFFFD
0301 FFF2 FFFD 0566  0007 PUSH      #memory[EA = 0X0303] = 0X0002
0305 FFF0 0002 FFFD  0566 SUBI      0XFFFB = 0XFFFD - 0X0002
0306 FFF2 FFFB 0566  0007 MAKEDUP   duplicate 0XFFFB
0307 FFF0 FFFB FFFB  0566 POP       @SP(  2) memory[EA = 0X0566 = memory[0XFFF6]] = 0XFFFB
030B FFF2 FFFB 0566  0007 SWAP      0X0566 <--> 0XFFFB
030C FFF2 0566 FFFB  0007 DISCARD   #1 words from top-of-stack
030F FFF4 FFFB 0007  0001 DISCARD   #1 words from top-of-stack
0312 FFF6 0007 0001  0526 SWAP      0X0001 <--> 0X0007
0313 FFF6 0001 0007  0526 MAKEDUP   duplicate 0X0001
0314 FFF4 0001 0001  0007 PUSH      @SP(  3) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0004
0318 FFF2 0004 0001  0001 ADDI      0X0005 = 0X0001 + 0X0004
0319 FFF4 0005 0001  0007 POP       @SP(  3) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0005
031D FFF6 0001 0007  0526 JMP       0X0207
0207 FFF6 0001 0007  0526 SETNZPI   TOS = 0X0001 NZP = 001
0208 FFF6 0001 0007  0526 JMPN      0X0219 NZP = 001
020B FFF6 0001 0007  0526 SWAP      0X0007 <--> 0X0001
020C FFF6 0007 0001  0526 MAKEDUP   duplicate 0X0007
020D FFF4 0007 0007  0001 PUSH      @SP(  3) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0005
0211 FFF2 0005 0007  0007 SWAP      0X0007 <--> 0X0005
0212 FFF2 0007 0005  0007 CMPI      0X0005 ? 0X0007 LEG = 100
0213 FFF6 0007 0001  0526 JMPLE     0X0227 LEG = 100
0227 FFF6 0007 0001  0526 PUSH      SB(  1) memory[EA = 0X0526] = 0X0005
022B FFF4 0005 0007  0001 SVC       #11 write integer
022E FFF6 0007 0001  0526 PUSHA     SB( 86) memory[EA = 0X05D0]
0232 FFF4 05D0 0007  0001 SVC       #51 write string
0235 FFF6 0007 0001  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X0009
0239 FFF4 0009 0007  0001 PUSH      SB( 33) memory[EA = 0X0566] = 0XFFFB
023D FFF2 FFFB 0009  0007 CMPI      0X0009 ? 0XFFFB LEG = 001
023E FFF6 0007 0001  0526 JMPL      0X0248 LEG = 001
0241 FFF6 0007 0001  0526 PUSH      #memory[EA = 0X0243] = 0X0000
0245 FFF4 0000 0007  0001 JMP       0X024C
024C FFF4 0000 0007  0001 SETT      T = 0
024D FFF4 0000 0007  0001 DISCARD   #1 words from top-of-stack
0250 FFF6 0007 0001  0526 JMPNT     0X026E T = 0
026E FFF6 0007 0001  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X0009
0272 FFF4 0009 0007  0001 PUSH      SB( 33) memory[EA = 0X0566] = 0XFFFB
0276 FFF2 FFFB 0009  0007 CMPI      0X0009 ? 0XFFFB LEG = 001
0277 FFF6 0007 0001  0526 JMPE      0X0281 LEG = 001
027A FFF6 0007 0001  0526 PUSH      #memory[EA = 0X027C] = 0X0000
027E FFF4 0000 0007  0001 JMP       0X0285
0285 FFF4 0000 0007  0001 SETT      T = 0
0286 FFF4 0000 0007  0001 DISCARD   #1 words from top-of-stack
0289 FFF6 0007 0001  0526 JMPNT     0X02A7 T = 0
02A7 FFF6 0007 0001  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X0009
02AB FFF4 0009 0007  0001 PUSH      SB( 33) memory[EA = 0X0566] = 0XFFFB
02AF FFF2 FFFB 0009  0007 CMPI      0X0009 ? 0XFFFB LEG = 001
02B0 FFF6 0007 0001  0526 JMPG      0X02BA LEG = 001
02BA FFF6 0007 0001  0526 PUSH      #memory[EA = 0X02BC] = 0XFFFF
02BE FFF4 FFFF 0007  0001 SETT      T = 1
02BF FFF4 FFFF 0007  0001 DISCARD   #1 words from top-of-stack
02C2 FFF6 0007 0001  0526 JMPNT     0X02E0 T = 1
02C5 FFF6 0007 0001  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X0009
02C9 FFF4 0009 0007  0001 SVC       #11 write integer
02CC FFF6 0007 0001  0526 PUSHA     SB(100) memory[EA = 0X05EC]
02D0 FFF4 05EC 0007  0001 SVC       #51 write string
02D3 FFF6 0007 0001  0526 PUSH      SB( 33) memory[EA = 0X0566] = 0XFFFB
02D7 FFF4 FFFB 0007  0001 SVC       #11 write integer
5: 9 > -5
02DA FFF6 0007 0001  0526 SVC       #42 write ENDL
02DD FFF6 0007 0001  0526 JMP       0X02E0
02E0 FFF6 0007 0001  0526 PUSHA     SB( 32) memory[EA = 0X0564]
02E4 FFF4 0564 0007  0001 PUSH      SB( 32) memory[EA = 0X0564] = 0X0009
02E8 FFF2 0009 0564  0007 PUSH      #memory[EA = 0X02EA] = 0X0002
02EC FFF0 0002 0009  0564 ADDI      0X000B = 0X0009 + 0X0002
02ED FFF2 000B 0564  0007 MAKEDUP   duplicate 0X000B
02EE FFF0 000B 000B  0564 POP       @SP(  2) memory[EA = 0X0564 = memory[0XFFF6]] = 0X000B
02F2 FFF2 000B 0564  0007 SWAP      0X0564 <--> 0X000B
02F3 FFF2 0564 000B  0007 DISCARD   #1 words from top-of-stack
02F6 FFF4 000B 0007  0001 DISCARD   #1 words from top-of-stack
02F9 FFF6 0007 0001  0526 PUSHA     SB( 33) memory[EA = 0X0566]
02FD FFF4 0566 0007  0001 PUSH      SB( 33) memory[EA = 0X0566] = 0XFFFB
0301 FFF2 FFFB 0566  0007 PUSH      #memory[EA = 0X0303] = 0X0002
0305 FFF0 0002 FFFB  0566 SUBI      0XFFF9 = 0XFFFB - 0X0002
0306 FFF2 FFF9 0566  0007 MAKEDUP   duplicate 0XFFF9
0307 FFF0 FFF9 FFF9  0566 POP       @SP(  2) memory[EA = 0X0566 = memory[0XFFF6]] = 0XFFF9
030B FFF2 FFF9 0566  0007 SWAP      0X0566 <--> 0XFFF9
030C FFF2 0566 FFF9  0007 DISCARD   #1 words from top-of-stack
030F FFF4 FFF9 0007  0001 DISCARD   #1 words from top-of-stack
0312 FFF6 0007 0001  0526 SWAP      0X0001 <--> 0X0007
0313 FFF6 0001 0007  0526 MAKEDUP   duplicate 0X0001
0314 FFF4 0001 0001  0007 PUSH      @SP(  3) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0005
0318 FFF2 0005 0001  0001 ADDI      0X0006 = 0X0001 + 0X0005
0319 FFF4 0006 0001  0007 POP       @SP(  3) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0006
031D FFF6 0001 0007  0526 JMP       0X0207
0207 FFF6 0001 0007  0526 SETNZPI   TOS = 0X0001 NZP = 001
0208 FFF6 0001 0007  0526 JMPN      0X0219 NZP = 001
020B FFF6 0001 0007  0526 SWAP      0X0007 <--> 0X0001
020C FFF6 0007 0001  0526 MAKEDUP   duplicate 0X0007
020D FFF4 0007 0007  0001 PUSH      @SP(  3) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0006
0211 FFF2 0006 0007  0007 SWAP      0X0007 <--> 0X0006
0212 FFF2 0007 0006  0007 CMPI      0X0006 ? 0X0007 LEG = 100
0213 FFF6 0007 0001  0526 JMPLE     0X0227 LEG = 100
0227 FFF6 0007 0001  0526 PUSH      SB(  1) memory[EA = 0X0526] = 0X0006
022B FFF4 0006 0007  0001 SVC       #11 write integer
022E FFF6 0007 0001  0526 PUSHA     SB( 86) memory[EA = 0X05D0]
0232 FFF4 05D0 0007  0001 SVC       #51 write string
0235 FFF6 0007 0001  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X000B
0239 FFF4 000B 0007  0001 PUSH      SB( 33) memory[EA = 0X0566] = 0XFFF9
023D FFF2 FFF9 000B  0007 CMPI      0X000B ? 0XFFF9 LEG = 001
023E FFF6 0007 0001  0526 JMPL      0X0248 LEG = 001
0241 FFF6 0007 0001  0526 PUSH      #memory[EA = 0X0243] = 0X0000
0245 FFF4 0000 0007  0001 JMP       0X024C
024C FFF4 0000 0007  0001 SETT      T = 0
024D FFF4 0000 0007  0001 DISCARD   #1 words from top-of-stack
0250 FFF6 0007 0001  0526 JMPNT     0X026E T = 0
026E FFF6 0007 0001  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X000B
0272 FFF4 000B 0007  0001 PUSH      SB( 33) memory[EA = 0X0566] = 0XFFF9
0276 FFF2 FFF9 000B  0007 CMPI      0X000B ? 0XFFF9 LEG = 001
0277 FFF6 0007 0001  0526 JMPE      0X0281 LEG = 001
027A FFF6 0007 0001  0526 PUSH      #memory[EA = 0X027C] = 0X0000
027E FFF4 0000 0007  0001 JMP       0X0285
0285 FFF4 0000 0007  0001 SETT      T = 0
0286 FFF4 0000 0007  0001 DISCARD   #1 words from top-of-stack
0289 FFF6 0007 0001  0526 JMPNT     0X02A7 T = 0
02A7 FFF6 0007 0001  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X000B
02AB FFF4 000B 0007  0001 PUSH      SB( 33) memory[EA = 0X0566] = 0XFFF9
02AF FFF2 FFF9 000B  0007 CMPI      0X000B ? 0XFFF9 LEG = 001
02B0 FFF6 0007 0001  0526 JMPG      0X02BA LEG = 001
02BA FFF6 0007 0001  0526 PUSH      #memory[EA = 0X02BC] = 0XFFFF
02BE FFF4 FFFF 0007  0001 SETT      T = 1
02BF FFF4 FFFF 0007  0001 DISCARD   #1 words from top-of-stack
02C2 FFF6 0007 0001  0526 JMPNT     0X02E0 T = 1
02C5 FFF6 0007 0001  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X000B
02C9 FFF4 000B 0007  0001 SVC       #11 write integer
02CC FFF6 0007 0001  0526 PUSHA     SB(100) memory[EA = 0X05EC]
02D0 FFF4 05EC 0007  0001 SVC       #51 write string
02D3 FFF6 0007 0001  0526 PUSH      SB( 33) memory[EA = 0X0566] = 0XFFF9
02D7 FFF4 FFF9 0007  0001 SVC       #11 write integer
6: 11 > -7
02DA FFF6 0007 0001  0526 SVC       #42 write ENDL
02DD FFF6 0007 0001  0526 JMP       0X02E0
02E0 FFF6 0007 0001  0526 PUSHA     SB( 32) memory[EA = 0X0564]
02E4 FFF4 0564 0007  0001 PUSH      SB( 32) memory[EA = 0X0564] = 0X000B
02E8 FFF2 000B 0564  0007 PUSH      #memory[EA = 0X02EA] = 0X0002
02EC FFF0 0002 000B  0564 ADDI      0X000D = 0X000B + 0X0002
02ED FFF2 000D 0564  0007 MAKEDUP   duplicate 0X000D
02EE FFF0 000D 000D  0564 POP       @SP(  2) memory[EA = 0X0564 = memory[0XFFF6]] = 0X000D
02F2 FFF2 000D 0564  0007 SWAP      0X0564 <--> 0X000D
02F3 FFF2 0564 000D  0007 DISCARD   #1 words from top-of-stack
02F6 FFF4 000D 0007  0001 DISCARD   #1 words from top-of-stack
02F9 FFF6 0007 0001  0526 PUSHA     SB( 33) memory[EA = 0X0566]
02FD FFF4 0566 0007  0001 PUSH      SB( 33) memory[EA = 0X0566] = 0XFFF9
0301 FFF2 FFF9 0566  0007 PUSH      #memory[EA = 0X0303] = 0X0002
0305 FFF0 0002 FFF9  0566 SUBI      0XFFF7 = 0XFFF9 - 0X0002
0306 FFF2 FFF7 0566  0007 MAKEDUP   duplicate 0XFFF7
0307 FFF0 FFF7 FFF7  0566 POP       @SP(  2) memory[EA = 0X0566 = memory[0XFFF6]] = 0XFFF7
030B FFF2 FFF7 0566  0007 SWAP      0X0566 <--> 0XFFF7
030C FFF2 0566 FFF7  0007 DISCARD   #1 words from top-of-stack
030F FFF4 FFF7 0007  0001 DISCARD   #1 words from top-of-stack
0312 FFF6 0007 0001  0526 SWAP      0X0001 <--> 0X0007
0313 FFF6 0001 0007  0526 MAKEDUP   duplicate 0X0001
0314 FFF4 0001 0001  0007 PUSH      @SP(  3) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0006
0318 FFF2 0006 0001  0001 ADDI      0X0007 = 0X0001 + 0X0006
0319 FFF4 0007 0001  0007 POP       @SP(  3) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0007
031D FFF6 0001 0007  0526 JMP       0X0207
0207 FFF6 0001 0007  0526 SETNZPI   TOS = 0X0001 NZP = 001
0208 FFF6 0001 0007  0526 JMPN      0X0219 NZP = 001
020B FFF6 0001 0007  0526 SWAP      0X0007 <--> 0X0001
020C FFF6 0007 0001  0526 MAKEDUP   duplicate 0X0007
020D FFF4 0007 0007  0001 PUSH      @SP(  3) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0007
0211 FFF2 0007 0007  0007 SWAP      0X0007 <--> 0X0007
0212 FFF2 0007 0007  0007 CMPI      0X0007 ? 0X0007 LEG = 010
0213 FFF6 0007 0001  0526 JMPLE     0X0227 LEG = 010
0227 FFF6 0007 0001  0526 PUSH      SB(  1) memory[EA = 0X0526] = 0X0007
022B FFF4 0007 0007  0001 SVC       #11 write integer
022E FFF6 0007 0001  0526 PUSHA     SB( 86) memory[EA = 0X05D0]
0232 FFF4 05D0 0007  0001 SVC       #51 write string
0235 FFF6 0007 0001  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X000D
0239 FFF4 000D 0007  0001 PUSH      SB( 33) memory[EA = 0X0566] = 0XFFF7
023D FFF2 FFF7 000D  0007 CMPI      0X000D ? 0XFFF7 LEG = 001
023E FFF6 0007 0001  0526 JMPL      0X0248 LEG = 001
0241 FFF6 0007 0001  0526 PUSH      #memory[EA = 0X0243] = 0X0000
0245 FFF4 0000 0007  0001 JMP       0X024C
024C FFF4 0000 0007  0001 SETT      T = 0
024D FFF4 0000 0007  0001 DISCARD   #1 words from top-of-stack
0250 FFF6 0007 0001  0526 JMPNT     0X026E T = 0
026E FFF6 0007 0001  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X000D
0272 FFF4 000D 0007  0001 PUSH      SB( 33) memory[EA = 0X0566] = 0XFFF7
0276 FFF2 FFF7 000D  0007 CMPI      0X000D ? 0XFFF7 LEG = 001
0277 FFF6 0007 0001  0526 JMPE      0X0281 LEG = 001
027A FFF6 0007 0001  0526 PUSH      #memory[EA = 0X027C] = 0X0000
027E FFF4 0000 0007  0001 JMP       0X0285
0285 FFF4 0000 0007  0001 SETT      T = 0
0286 FFF4 0000 0007  0001 DISCARD   #1 words from top-of-stack
0289 FFF6 0007 0001  0526 JMPNT     0X02A7 T = 0
02A7 FFF6 0007 0001  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X000D
02AB FFF4 000D 0007  0001 PUSH      SB( 33) memory[EA = 0X0566] = 0XFFF7
02AF FFF2 FFF7 000D  0007 CMPI      0X000D ? 0XFFF7 LEG = 001
02B0 FFF6 0007 0001  0526 JMPG      0X02BA LEG = 001
02BA FFF6 0007 0001  0526 PUSH      #memory[EA = 0X02BC] = 0XFFFF
02BE FFF4 FFFF 0007  0001 SETT      T = 1
02BF FFF4 FFFF 0007  0001 DISCARD   #1 words from top-of-stack
02C2 FFF6 0007 0001  0526 JMPNT     0X02E0 T = 1
02C5 FFF6 0007 0001  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X000D
02C9 FFF4 000D 0007  0001 SVC       #11 write integer
02CC FFF6 0007 0001  0526 PUSHA     SB(100) memory[EA = 0X05EC]
02D0 FFF4 05EC 0007  0001 SVC       #51 write string
02D3 FFF6 0007 0001  0526 PUSH      SB( 33) memory[EA = 0X0566] = 0XFFF7
02D7 FFF4 FFF7 0007  0001 SVC       #11 write integer
7: 13 > -9
02DA FFF6 0007 0001  0526 SVC       #42 write ENDL
02DD FFF6 0007 0001  0526 JMP       0X02E0
02E0 FFF6 0007 0001  0526 PUSHA     SB( 32) memory[EA = 0X0564]
02E4 FFF4 0564 0007  0001 PUSH      SB( 32) memory[EA = 0X0564] = 0X000D
02E8 FFF2 000D 0564  0007 PUSH      #memory[EA = 0X02EA] = 0X0002
02EC FFF0 0002 000D  0564 ADDI      0X000F = 0X000D + 0X0002
02ED FFF2 000F 0564  0007 MAKEDUP   duplicate 0X000F
02EE FFF0 000F 000F  0564 POP       @SP(  2) memory[EA = 0X0564 = memory[0XFFF6]] = 0X000F
02F2 FFF2 000F 0564  0007 SWAP      0X0564 <--> 0X000F
02F3 FFF2 0564 000F  0007 DISCARD   #1 words from top-of-stack
02F6 FFF4 000F 0007  0001 DISCARD   #1 words from top-of-stack
02F9 FFF6 0007 0001  0526 PUSHA     SB( 33) memory[EA = 0X0566]
02FD FFF4 0566 0007  0001 PUSH      SB( 33) memory[EA = 0X0566] = 0XFFF7
0301 FFF2 FFF7 0566  0007 PUSH      #memory[EA = 0X0303] = 0X0002
0305 FFF0 0002 FFF7  0566 SUBI      0XFFF5 = 0XFFF7 - 0X0002
0306 FFF2 FFF5 0566  0007 MAKEDUP   duplicate 0XFFF5
0307 FFF0 FFF5 FFF5  0566 POP       @SP(  2) memory[EA = 0X0566 = memory[0XFFF6]] = 0XFFF5
030B FFF2 FFF5 0566  0007 SWAP      0X0566 <--> 0XFFF5
030C FFF2 0566 FFF5  0007 DISCARD   #1 words from top-of-stack
030F FFF4 FFF5 0007  0001 DISCARD   #1 words from top-of-stack
0312 FFF6 0007 0001  0526 SWAP      0X0001 <--> 0X0007
0313 FFF6 0001 0007  0526 MAKEDUP   duplicate 0X0001
0314 FFF4 0001 0001  0007 PUSH      @SP(  3) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0007
0318 FFF2 0007 0001  0001 ADDI      0X0008 = 0X0001 + 0X0007
0319 FFF4 0008 0001  0007 POP       @SP(  3) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0008
031D FFF6 0001 0007  0526 JMP       0X0207
0207 FFF6 0001 0007  0526 SETNZPI   TOS = 0X0001 NZP = 001
0208 FFF6 0001 0007  0526 JMPN      0X0219 NZP = 001
020B FFF6 0001 0007  0526 SWAP      0X0007 <--> 0X0001
020C FFF6 0007 0001  0526 MAKEDUP   duplicate 0X0007
020D FFF4 0007 0007  0001 PUSH      @SP(  3) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0008
0211 FFF2 0008 0007  0007 SWAP      0X0007 <--> 0X0008
0212 FFF2 0007 0008  0007 CMPI      0X0008 ? 0X0007 LEG = 001
0213 FFF6 0007 0001  0526 JMPLE     0X0227 LEG = 001
0216 FFF6 0007 0001  0526 JMP       0X0320
0320 FFF6 0007 0001  0526 DISCARD   #3 words from top-of-stack
0323 FFFC 001B            PUSHA     SB(105) memory[EA = 0X05F6]
0327 FFFA 05F6 001B       SVC       #51 write string
For-loop (3)
032A FFFC 001B            SVC       #42 write ENDL
032D FFFC 001B            PUSHA     SB( 32) memory[EA = 0X0564]
0331 FFFA 0564 001B       PUSH      SB(  0) memory[EA = 0X0524] = 0X0001
0335 FFF8 0001 0564  001B MAKEDUP   duplicate 0X0001
0336 FFF6 0001 0001  0564 POP       @SP(  2) memory[EA = 0X0564 = memory[0XFFFC]] = 0X0001
033A FFF8 0001 0564  001B SWAP      0X0564 <--> 0X0001
033B FFF8 0564 0001  001B DISCARD   #1 words from top-of-stack
033E FFFA 0001 001B       DISCARD   #1 words from top-of-stack
0341 FFFC 001B            PUSHA     SB( 33) memory[EA = 0X0566]
0345 FFFA 0566 001B       PUSH      SB( 30) memory[EA = 0X0560] = 0X0003
0349 FFF8 0003 0566  001B MAKEDUP   duplicate 0X0003
034A FFF6 0003 0003  0566 POP       @SP(  2) memory[EA = 0X0566 = memory[0XFFFC]] = 0X0003
034E FFF8 0003 0566  001B SWAP      0X0566 <--> 0X0003
034F FFF8 0566 0003  001B DISCARD   #1 words from top-of-stack
0352 FFFA 0003 001B       DISCARD   #1 words from top-of-stack
0355 FFFC 001B            PUSHA     SB(  1) memory[EA = 0X0526]
0359 FFFA 0526 001B       PUSH      SB( 31) memory[EA = 0X0562] = 0X0007
035D FFF8 0007 0526  001B POP       @SP(  1) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0007
0361 FFFA 0526 001B       PUSH      #memory[EA = 0X0363] = 0X0001
0365 FFF8 0001 0526  001B PUSH      #memory[EA = 0X0367] = 0X0001
0369 FFF6 0001 0001  0526 NEGI      0XFFFF = -(0X0001)
036A FFF6 FFFF 0001  0526 SETNZPI   TOS = 0XFFFF NZP = 100
036B FFF6 FFFF 0001  0526 JMPNZ     0X0379 NZP = 100
0379 FFF6 FFFF 0001  0526 SETNZPI   TOS = 0XFFFF NZP = 100
037A FFF6 FFFF 0001  0526 JMPN      0X038B NZP = 100
038B FFF6 FFFF 0001  0526 SWAP      0X0001 <--> 0XFFFF
038C FFF6 0001 FFFF  0526 MAKEDUP   duplicate 0X0001
038D FFF4 0001 0001  FFFF PUSH      @SP(  3) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0007
0391 FFF2 0007 0001  0001 SWAP      0X0001 <--> 0X0007
0392 FFF2 0001 0007  0001 CMPI      0X0007 ? 0X0001 LEG = 001
0393 FFF6 0001 FFFF  0526 JMPGE     0X0399 LEG = 001
0399 FFF6 0001 FFFF  0526 PUSH      SB(  1) memory[EA = 0X0526] = 0X0007
039D FFF4 0007 0001  FFFF SVC       #11 write integer
03A0 FFF6 0001 FFFF  0526 PUSHA     SB(119) memory[EA = 0X0612]
03A4 FFF4 0612 0001  FFFF SVC       #51 write string
03A7 FFF6 0001 FFFF  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X0001
03AB FFF4 0001 0001  FFFF PUSH      SB( 33) memory[EA = 0X0566] = 0X0003
03AF FFF2 0003 0001  0001 CMPI      0X0001 ? 0X0003 LEG = 100
03B0 FFF6 0001 FFFF  0526 JMPL      0X03BA LEG = 100
03BA FFF6 0001 FFFF  0526 PUSH      #memory[EA = 0X03BC] = 0XFFFF
03BE FFF4 FFFF 0001  FFFF SETT      T = 1
03BF FFF4 FFFF 0001  FFFF DISCARD   #1 words from top-of-stack
03C2 FFF6 0001 FFFF  0526 JMPNT     0X03E0 T = 1
03C5 FFF6 0001 FFFF  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X0001
03C9 FFF4 0001 0001  FFFF SVC       #11 write integer
03CC FFF6 0001 FFFF  0526 PUSHA     SB(123) memory[EA = 0X061A]
03D0 FFF4 061A 0001  FFFF SVC       #51 write string
03D3 FFF6 0001 FFFF  0526 PUSH      SB( 33) memory[EA = 0X0566] = 0X0003
03D7 FFF4 0003 0001  FFFF SVC       #11 write integer
7: 1 < 3
03DA FFF6 0001 FFFF  0526 SVC       #42 write ENDL
03DD FFF6 0001 FFFF  0526 JMP       0X0452
0452 FFF6 0001 FFFF  0526 PUSHA     SB( 32) memory[EA = 0X0564]
0456 FFF4 0564 0001  FFFF PUSH      SB( 32) memory[EA = 0X0564] = 0X0001
045A FFF2 0001 0564  0001 PUSH      #memory[EA = 0X045C] = 0X0003
045E FFF0 0003 0001  0564 ADDI      0X0004 = 0X0001 + 0X0003
045F FFF2 0004 0564  0001 MAKEDUP   duplicate 0X0004
0460 FFF0 0004 0004  0564 POP       @SP(  2) memory[EA = 0X0564 = memory[0XFFF6]] = 0X0004
0464 FFF2 0004 0564  0001 SWAP      0X0564 <--> 0X0004
0465 FFF2 0564 0004  0001 DISCARD   #1 words from top-of-stack
0468 FFF4 0004 0001  FFFF DISCARD   #1 words from top-of-stack
046B FFF6 0001 FFFF  0526 PUSHA     SB( 33) memory[EA = 0X0566]
046F FFF4 0566 0001  FFFF PUSH      SB( 33) memory[EA = 0X0566] = 0X0003
0473 FFF2 0003 0566  0001 PUSH      #memory[EA = 0X0475] = 0X0003
0477 FFF0 0003 0003  0566 SUBI      0X0000 = 0X0003 - 0X0003
0478 FFF2 0000 0566  0001 MAKEDUP   duplicate 0X0000
0479 FFF0 0000 0000  0566 POP       @SP(  2) memory[EA = 0X0566 = memory[0XFFF6]] = 0X0000
047D FFF2 0000 0566  0001 SWAP      0X0566 <--> 0X0000
047E FFF2 0566 0000  0001 DISCARD   #1 words from top-of-stack
0481 FFF4 0000 0001  FFFF DISCARD   #1 words from top-of-stack
0484 FFF6 0001 FFFF  0526 SWAP      0XFFFF <--> 0X0001
0485 FFF6 FFFF 0001  0526 MAKEDUP   duplicate 0XFFFF
0486 FFF4 FFFF FFFF  0001 PUSH      @SP(  3) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0007
048A FFF2 0007 FFFF  FFFF ADDI      0X0006 = 0XFFFF + 0X0007
048B FFF4 0006 FFFF  0001 POP       @SP(  3) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0006
048F FFF6 FFFF 0001  0526 JMP       0X0379
0379 FFF6 FFFF 0001  0526 SETNZPI   TOS = 0XFFFF NZP = 100
037A FFF6 FFFF 0001  0526 JMPN      0X038B NZP = 100
038B FFF6 FFFF 0001  0526 SWAP      0X0001 <--> 0XFFFF
038C FFF6 0001 FFFF  0526 MAKEDUP   duplicate 0X0001
038D FFF4 0001 0001  FFFF PUSH      @SP(  3) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0006
0391 FFF2 0006 0001  0001 SWAP      0X0001 <--> 0X0006
0392 FFF2 0001 0006  0001 CMPI      0X0006 ? 0X0001 LEG = 001
0393 FFF6 0001 FFFF  0526 JMPGE     0X0399 LEG = 001
0399 FFF6 0001 FFFF  0526 PUSH      SB(  1) memory[EA = 0X0526] = 0X0006
039D FFF4 0006 0001  FFFF SVC       #11 write integer
03A0 FFF6 0001 FFFF  0526 PUSHA     SB(119) memory[EA = 0X0612]
03A4 FFF4 0612 0001  FFFF SVC       #51 write string
03A7 FFF6 0001 FFFF  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X0004
03AB FFF4 0004 0001  FFFF PUSH      SB( 33) memory[EA = 0X0566] = 0X0000
03AF FFF2 0000 0004  0001 CMPI      0X0004 ? 0X0000 LEG = 001
03B0 FFF6 0001 FFFF  0526 JMPL      0X03BA LEG = 001
03B3 FFF6 0001 FFFF  0526 PUSH      #memory[EA = 0X03B5] = 0X0000
03B7 FFF4 0000 0001  FFFF JMP       0X03BE
03BE FFF4 0000 0001  FFFF SETT      T = 0
03BF FFF4 0000 0001  FFFF DISCARD   #1 words from top-of-stack
03C2 FFF6 0001 FFFF  0526 JMPNT     0X03E0 T = 0
03E0 FFF6 0001 FFFF  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X0004
03E4 FFF4 0004 0001  FFFF PUSH      SB( 33) memory[EA = 0X0566] = 0X0000
03E8 FFF2 0000 0004  0001 CMPI      0X0004 ? 0X0000 LEG = 001
03E9 FFF6 0001 FFFF  0526 JMPE      0X03F3 LEG = 001
03EC FFF6 0001 FFFF  0526 PUSH      #memory[EA = 0X03EE] = 0X0000
03F0 FFF4 0000 0001  FFFF JMP       0X03F7
03F7 FFF4 0000 0001  FFFF SETT      T = 0
03F8 FFF4 0000 0001  FFFF DISCARD   #1 words from top-of-stack
03FB FFF6 0001 FFFF  0526 JMPNT     0X0419 T = 0
0419 FFF6 0001 FFFF  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X0004
041D FFF4 0004 0001  FFFF PUSH      SB( 33) memory[EA = 0X0566] = 0X0000
0421 FFF2 0000 0004  0001 CMPI      0X0004 ? 0X0000 LEG = 001
0422 FFF6 0001 FFFF  0526 JMPG      0X042C LEG = 001
042C FFF6 0001 FFFF  0526 PUSH      #memory[EA = 0X042E] = 0XFFFF
0430 FFF4 FFFF 0001  FFFF SETT      T = 1
0431 FFF4 FFFF 0001  FFFF DISCARD   #1 words from top-of-stack
0434 FFF6 0001 FFFF  0526 JMPNT     0X0452 T = 1
0437 FFF6 0001 FFFF  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X0004
043B FFF4 0004 0001  FFFF SVC       #11 write integer
043E FFF6 0001 FFFF  0526 PUSHA     SB(133) memory[EA = 0X062E]
0442 FFF4 062E 0001  FFFF SVC       #51 write string
0445 FFF6 0001 FFFF  0526 PUSH      SB( 33) memory[EA = 0X0566] = 0X0000
0449 FFF4 0000 0001  FFFF SVC       #11 write integer
6: 4 > 0
044C FFF6 0001 FFFF  0526 SVC       #42 write ENDL
044F FFF6 0001 FFFF  0526 JMP       0X0452
0452 FFF6 0001 FFFF  0526 PUSHA     SB( 32) memory[EA = 0X0564]
0456 FFF4 0564 0001  FFFF PUSH      SB( 32) memory[EA = 0X0564] = 0X0004
045A FFF2 0004 0564  0001 PUSH      #memory[EA = 0X045C] = 0X0003
045E FFF0 0003 0004  0564 ADDI      0X0007 = 0X0004 + 0X0003
045F FFF2 0007 0564  0001 MAKEDUP   duplicate 0X0007
0460 FFF0 0007 0007  0564 POP       @SP(  2) memory[EA = 0X0564 = memory[0XFFF6]] = 0X0007
0464 FFF2 0007 0564  0001 SWAP      0X0564 <--> 0X0007
0465 FFF2 0564 0007  0001 DISCARD   #1 words from top-of-stack
0468 FFF4 0007 0001  FFFF DISCARD   #1 words from top-of-stack
046B FFF6 0001 FFFF  0526 PUSHA     SB( 33) memory[EA = 0X0566]
046F FFF4 0566 0001  FFFF PUSH      SB( 33) memory[EA = 0X0566] = 0X0000
0473 FFF2 0000 0566  0001 PUSH      #memory[EA = 0X0475] = 0X0003
0477 FFF0 0003 0000  0566 SUBI      0XFFFD = 0X0000 - 0X0003
0478 FFF2 FFFD 0566  0001 MAKEDUP   duplicate 0XFFFD
0479 FFF0 FFFD FFFD  0566 POP       @SP(  2) memory[EA = 0X0566 = memory[0XFFF6]] = 0XFFFD
047D FFF2 FFFD 0566  0001 SWAP      0X0566 <--> 0XFFFD
047E FFF2 0566 FFFD  0001 DISCARD   #1 words from top-of-stack
0481 FFF4 FFFD 0001  FFFF DISCARD   #1 words from top-of-stack
0484 FFF6 0001 FFFF  0526 SWAP      0XFFFF <--> 0X0001
0485 FFF6 FFFF 0001  0526 MAKEDUP   duplicate 0XFFFF
0486 FFF4 FFFF FFFF  0001 PUSH      @SP(  3) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0006
048A FFF2 0006 FFFF  FFFF ADDI      0X0005 = 0XFFFF + 0X0006
048B FFF4 0005 FFFF  0001 POP       @SP(  3) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0005
048F FFF6 FFFF 0001  0526 JMP       0X0379
0379 FFF6 FFFF 0001  0526 SETNZPI   TOS = 0XFFFF NZP = 100
037A FFF6 FFFF 0001  0526 JMPN      0X038B NZP = 100
038B FFF6 FFFF 0001  0526 SWAP      0X0001 <--> 0XFFFF
038C FFF6 0001 FFFF  0526 MAKEDUP   duplicate 0X0001
038D FFF4 0001 0001  FFFF PUSH      @SP(  3) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0005
0391 FFF2 0005 0001  0001 SWAP      0X0001 <--> 0X0005
0392 FFF2 0001 0005  0001 CMPI      0X0005 ? 0X0001 LEG = 001
0393 FFF6 0001 FFFF  0526 JMPGE     0X0399 LEG = 001
0399 FFF6 0001 FFFF  0526 PUSH      SB(  1) memory[EA = 0X0526] = 0X0005
039D FFF4 0005 0001  FFFF SVC       #11 write integer
03A0 FFF6 0001 FFFF  0526 PUSHA     SB(119) memory[EA = 0X0612]
03A4 FFF4 0612 0001  FFFF SVC       #51 write string
03A7 FFF6 0001 FFFF  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X0007
03AB FFF4 0007 0001  FFFF PUSH      SB( 33) memory[EA = 0X0566] = 0XFFFD
03AF FFF2 FFFD 0007  0001 CMPI      0X0007 ? 0XFFFD LEG = 001
03B0 FFF6 0001 FFFF  0526 JMPL      0X03BA LEG = 001
03B3 FFF6 0001 FFFF  0526 PUSH      #memory[EA = 0X03B5] = 0X0000
03B7 FFF4 0000 0001  FFFF JMP       0X03BE
03BE FFF4 0000 0001  FFFF SETT      T = 0
03BF FFF4 0000 0001  FFFF DISCARD   #1 words from top-of-stack
03C2 FFF6 0001 FFFF  0526 JMPNT     0X03E0 T = 0
03E0 FFF6 0001 FFFF  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X0007
03E4 FFF4 0007 0001  FFFF PUSH      SB( 33) memory[EA = 0X0566] = 0XFFFD
03E8 FFF2 FFFD 0007  0001 CMPI      0X0007 ? 0XFFFD LEG = 001
03E9 FFF6 0001 FFFF  0526 JMPE      0X03F3 LEG = 001
03EC FFF6 0001 FFFF  0526 PUSH      #memory[EA = 0X03EE] = 0X0000
03F0 FFF4 0000 0001  FFFF JMP       0X03F7
03F7 FFF4 0000 0001  FFFF SETT      T = 0
03F8 FFF4 0000 0001  FFFF DISCARD   #1 words from top-of-stack
03FB FFF6 0001 FFFF  0526 JMPNT     0X0419 T = 0
0419 FFF6 0001 FFFF  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X0007
041D FFF4 0007 0001  FFFF PUSH      SB( 33) memory[EA = 0X0566] = 0XFFFD
0421 FFF2 FFFD 0007  0001 CMPI      0X0007 ? 0XFFFD LEG = 001
0422 FFF6 0001 FFFF  0526 JMPG      0X042C LEG = 001
042C FFF6 0001 FFFF  0526 PUSH      #memory[EA = 0X042E] = 0XFFFF
0430 FFF4 FFFF 0001  FFFF SETT      T = 1
0431 FFF4 FFFF 0001  FFFF DISCARD   #1 words from top-of-stack
0434 FFF6 0001 FFFF  0526 JMPNT     0X0452 T = 1
0437 FFF6 0001 FFFF  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X0007
043B FFF4 0007 0001  FFFF SVC       #11 write integer
043E FFF6 0001 FFFF  0526 PUSHA     SB(133) memory[EA = 0X062E]
0442 FFF4 062E 0001  FFFF SVC       #51 write string
0445 FFF6 0001 FFFF  0526 PUSH      SB( 33) memory[EA = 0X0566] = 0XFFFD
0449 FFF4 FFFD 0001  FFFF SVC       #11 write integer
5: 7 > -3
044C FFF6 0001 FFFF  0526 SVC       #42 write ENDL
044F FFF6 0001 FFFF  0526 JMP       0X0452
0452 FFF6 0001 FFFF  0526 PUSHA     SB( 32) memory[EA = 0X0564]
0456 FFF4 0564 0001  FFFF PUSH      SB( 32) memory[EA = 0X0564] = 0X0007
045A FFF2 0007 0564  0001 PUSH      #memory[EA = 0X045C] = 0X0003
045E FFF0 0003 0007  0564 ADDI      0X000A = 0X0007 + 0X0003
045F FFF2 000A 0564  0001 MAKEDUP   duplicate 0X000A
0460 FFF0 000A 000A  0564 POP       @SP(  2) memory[EA = 0X0564 = memory[0XFFF6]] = 0X000A
0464 FFF2 000A 0564  0001 SWAP      0X0564 <--> 0X000A
0465 FFF2 0564 000A  0001 DISCARD   #1 words from top-of-stack
0468 FFF4 000A 0001  FFFF DISCARD   #1 words from top-of-stack
046B FFF6 0001 FFFF  0526 PUSHA     SB( 33) memory[EA = 0X0566]
046F FFF4 0566 0001  FFFF PUSH      SB( 33) memory[EA = 0X0566] = 0XFFFD
0473 FFF2 FFFD 0566  0001 PUSH      #memory[EA = 0X0475] = 0X0003
0477 FFF0 0003 FFFD  0566 SUBI      0XFFFA = 0XFFFD - 0X0003
0478 FFF2 FFFA 0566  0001 MAKEDUP   duplicate 0XFFFA
0479 FFF0 FFFA FFFA  0566 POP       @SP(  2) memory[EA = 0X0566 = memory[0XFFF6]] = 0XFFFA
047D FFF2 FFFA 0566  0001 SWAP      0X0566 <--> 0XFFFA
047E FFF2 0566 FFFA  0001 DISCARD   #1 words from top-of-stack
0481 FFF4 FFFA 0001  FFFF DISCARD   #1 words from top-of-stack
0484 FFF6 0001 FFFF  0526 SWAP      0XFFFF <--> 0X0001
0485 FFF6 FFFF 0001  0526 MAKEDUP   duplicate 0XFFFF
0486 FFF4 FFFF FFFF  0001 PUSH      @SP(  3) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0005
048A FFF2 0005 FFFF  FFFF ADDI      0X0004 = 0XFFFF + 0X0005
048B FFF4 0004 FFFF  0001 POP       @SP(  3) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0004
048F FFF6 FFFF 0001  0526 JMP       0X0379
0379 FFF6 FFFF 0001  0526 SETNZPI   TOS = 0XFFFF NZP = 100
037A FFF6 FFFF 0001  0526 JMPN      0X038B NZP = 100
038B FFF6 FFFF 0001  0526 SWAP      0X0001 <--> 0XFFFF
038C FFF6 0001 FFFF  0526 MAKEDUP   duplicate 0X0001
038D FFF4 0001 0001  FFFF PUSH      @SP(  3) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0004
0391 FFF2 0004 0001  0001 SWAP      0X0001 <--> 0X0004
0392 FFF2 0001 0004  0001 CMPI      0X0004 ? 0X0001 LEG = 001
0393 FFF6 0001 FFFF  0526 JMPGE     0X0399 LEG = 001
0399 FFF6 0001 FFFF  0526 PUSH      SB(  1) memory[EA = 0X0526] = 0X0004
039D FFF4 0004 0001  FFFF SVC       #11 write integer
03A0 FFF6 0001 FFFF  0526 PUSHA     SB(119) memory[EA = 0X0612]
03A4 FFF4 0612 0001  FFFF SVC       #51 write string
03A7 FFF6 0001 FFFF  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X000A
03AB FFF4 000A 0001  FFFF PUSH      SB( 33) memory[EA = 0X0566] = 0XFFFA
03AF FFF2 FFFA 000A  0001 CMPI      0X000A ? 0XFFFA LEG = 001
03B0 FFF6 0001 FFFF  0526 JMPL      0X03BA LEG = 001
03B3 FFF6 0001 FFFF  0526 PUSH      #memory[EA = 0X03B5] = 0X0000
03B7 FFF4 0000 0001  FFFF JMP       0X03BE
03BE FFF4 0000 0001  FFFF SETT      T = 0
03BF FFF4 0000 0001  FFFF DISCARD   #1 words from top-of-stack
03C2 FFF6 0001 FFFF  0526 JMPNT     0X03E0 T = 0
03E0 FFF6 0001 FFFF  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X000A
03E4 FFF4 000A 0001  FFFF PUSH      SB( 33) memory[EA = 0X0566] = 0XFFFA
03E8 FFF2 FFFA 000A  0001 CMPI      0X000A ? 0XFFFA LEG = 001
03E9 FFF6 0001 FFFF  0526 JMPE      0X03F3 LEG = 001
03EC FFF6 0001 FFFF  0526 PUSH      #memory[EA = 0X03EE] = 0X0000
03F0 FFF4 0000 0001  FFFF JMP       0X03F7
03F7 FFF4 0000 0001  FFFF SETT      T = 0
03F8 FFF4 0000 0001  FFFF DISCARD   #1 words from top-of-stack
03FB FFF6 0001 FFFF  0526 JMPNT     0X0419 T = 0
0419 FFF6 0001 FFFF  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X000A
041D FFF4 000A 0001  FFFF PUSH      SB( 33) memory[EA = 0X0566] = 0XFFFA
0421 FFF2 FFFA 000A  0001 CMPI      0X000A ? 0XFFFA LEG = 001
0422 FFF6 0001 FFFF  0526 JMPG      0X042C LEG = 001
042C FFF6 0001 FFFF  0526 PUSH      #memory[EA = 0X042E] = 0XFFFF
0430 FFF4 FFFF 0001  FFFF SETT      T = 1
0431 FFF4 FFFF 0001  FFFF DISCARD   #1 words from top-of-stack
0434 FFF6 0001 FFFF  0526 JMPNT     0X0452 T = 1
0437 FFF6 0001 FFFF  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X000A
043B FFF4 000A 0001  FFFF SVC       #11 write integer
043E FFF6 0001 FFFF  0526 PUSHA     SB(133) memory[EA = 0X062E]
0442 FFF4 062E 0001  FFFF SVC       #51 write string
0445 FFF6 0001 FFFF  0526 PUSH      SB( 33) memory[EA = 0X0566] = 0XFFFA
0449 FFF4 FFFA 0001  FFFF SVC       #11 write integer
4: 10 > -6
044C FFF6 0001 FFFF  0526 SVC       #42 write ENDL
044F FFF6 0001 FFFF  0526 JMP       0X0452
0452 FFF6 0001 FFFF  0526 PUSHA     SB( 32) memory[EA = 0X0564]
0456 FFF4 0564 0001  FFFF PUSH      SB( 32) memory[EA = 0X0564] = 0X000A
045A FFF2 000A 0564  0001 PUSH      #memory[EA = 0X045C] = 0X0003
045E FFF0 0003 000A  0564 ADDI      0X000D = 0X000A + 0X0003
045F FFF2 000D 0564  0001 MAKEDUP   duplicate 0X000D
0460 FFF0 000D 000D  0564 POP       @SP(  2) memory[EA = 0X0564 = memory[0XFFF6]] = 0X000D
0464 FFF2 000D 0564  0001 SWAP      0X0564 <--> 0X000D
0465 FFF2 0564 000D  0001 DISCARD   #1 words from top-of-stack
0468 FFF4 000D 0001  FFFF DISCARD   #1 words from top-of-stack
046B FFF6 0001 FFFF  0526 PUSHA     SB( 33) memory[EA = 0X0566]
046F FFF4 0566 0001  FFFF PUSH      SB( 33) memory[EA = 0X0566] = 0XFFFA
0473 FFF2 FFFA 0566  0001 PUSH      #memory[EA = 0X0475] = 0X0003
0477 FFF0 0003 FFFA  0566 SUBI      0XFFF7 = 0XFFFA - 0X0003
0478 FFF2 FFF7 0566  0001 MAKEDUP   duplicate 0XFFF7
0479 FFF0 FFF7 FFF7  0566 POP       @SP(  2) memory[EA = 0X0566 = memory[0XFFF6]] = 0XFFF7
047D FFF2 FFF7 0566  0001 SWAP      0X0566 <--> 0XFFF7
047E FFF2 0566 FFF7  0001 DISCARD   #1 words from top-of-stack
0481 FFF4 FFF7 0001  FFFF DISCARD   #1 words from top-of-stack
0484 FFF6 0001 FFFF  0526 SWAP      0XFFFF <--> 0X0001
0485 FFF6 FFFF 0001  0526 MAKEDUP   duplicate 0XFFFF
0486 FFF4 FFFF FFFF  0001 PUSH      @SP(  3) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0004
048A FFF2 0004 FFFF  FFFF ADDI      0X0003 = 0XFFFF + 0X0004
048B FFF4 0003 FFFF  0001 POP       @SP(  3) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0003
048F FFF6 FFFF 0001  0526 JMP       0X0379
0379 FFF6 FFFF 0001  0526 SETNZPI   TOS = 0XFFFF NZP = 100
037A FFF6 FFFF 0001  0526 JMPN      0X038B NZP = 100
038B FFF6 FFFF 0001  0526 SWAP      0X0001 <--> 0XFFFF
038C FFF6 0001 FFFF  0526 MAKEDUP   duplicate 0X0001
038D FFF4 0001 0001  FFFF PUSH      @SP(  3) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0003
0391 FFF2 0003 0001  0001 SWAP      0X0001 <--> 0X0003
0392 FFF2 0001 0003  0001 CMPI      0X0003 ? 0X0001 LEG = 001
0393 FFF6 0001 FFFF  0526 JMPGE     0X0399 LEG = 001
0399 FFF6 0001 FFFF  0526 PUSH      SB(  1) memory[EA = 0X0526] = 0X0003
039D FFF4 0003 0001  FFFF SVC       #11 write integer
03A0 FFF6 0001 FFFF  0526 PUSHA     SB(119) memory[EA = 0X0612]
03A4 FFF4 0612 0001  FFFF SVC       #51 write string
03A7 FFF6 0001 FFFF  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X000D
03AB FFF4 000D 0001  FFFF PUSH      SB( 33) memory[EA = 0X0566] = 0XFFF7
03AF FFF2 FFF7 000D  0001 CMPI      0X000D ? 0XFFF7 LEG = 001
03B0 FFF6 0001 FFFF  0526 JMPL      0X03BA LEG = 001
03B3 FFF6 0001 FFFF  0526 PUSH      #memory[EA = 0X03B5] = 0X0000
03B7 FFF4 0000 0001  FFFF JMP       0X03BE
03BE FFF4 0000 0001  FFFF SETT      T = 0
03BF FFF4 0000 0001  FFFF DISCARD   #1 words from top-of-stack
03C2 FFF6 0001 FFFF  0526 JMPNT     0X03E0 T = 0
03E0 FFF6 0001 FFFF  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X000D
03E4 FFF4 000D 0001  FFFF PUSH      SB( 33) memory[EA = 0X0566] = 0XFFF7
03E8 FFF2 FFF7 000D  0001 CMPI      0X000D ? 0XFFF7 LEG = 001
03E9 FFF6 0001 FFFF  0526 JMPE      0X03F3 LEG = 001
03EC FFF6 0001 FFFF  0526 PUSH      #memory[EA = 0X03EE] = 0X0000
03F0 FFF4 0000 0001  FFFF JMP       0X03F7
03F7 FFF4 0000 0001  FFFF SETT      T = 0
03F8 FFF4 0000 0001  FFFF DISCARD   #1 words from top-of-stack
03FB FFF6 0001 FFFF  0526 JMPNT     0X0419 T = 0
0419 FFF6 0001 FFFF  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X000D
041D FFF4 000D 0001  FFFF PUSH      SB( 33) memory[EA = 0X0566] = 0XFFF7
0421 FFF2 FFF7 000D  0001 CMPI      0X000D ? 0XFFF7 LEG = 001
0422 FFF6 0001 FFFF  0526 JMPG      0X042C LEG = 001
042C FFF6 0001 FFFF  0526 PUSH      #memory[EA = 0X042E] = 0XFFFF
0430 FFF4 FFFF 0001  FFFF SETT      T = 1
0431 FFF4 FFFF 0001  FFFF DISCARD   #1 words from top-of-stack
0434 FFF6 0001 FFFF  0526 JMPNT     0X0452 T = 1
0437 FFF6 0001 FFFF  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X000D
043B FFF4 000D 0001  FFFF SVC       #11 write integer
043E FFF6 0001 FFFF  0526 PUSHA     SB(133) memory[EA = 0X062E]
0442 FFF4 062E 0001  FFFF SVC       #51 write string
0445 FFF6 0001 FFFF  0526 PUSH      SB( 33) memory[EA = 0X0566] = 0XFFF7
0449 FFF4 FFF7 0001  FFFF SVC       #11 write integer
3: 13 > -9
044C FFF6 0001 FFFF  0526 SVC       #42 write ENDL
044F FFF6 0001 FFFF  0526 JMP       0X0452
0452 FFF6 0001 FFFF  0526 PUSHA     SB( 32) memory[EA = 0X0564]
0456 FFF4 0564 0001  FFFF PUSH      SB( 32) memory[EA = 0X0564] = 0X000D
045A FFF2 000D 0564  0001 PUSH      #memory[EA = 0X045C] = 0X0003
045E FFF0 0003 000D  0564 ADDI      0X0010 = 0X000D + 0X0003
045F FFF2 0010 0564  0001 MAKEDUP   duplicate 0X0010
0460 FFF0 0010 0010  0564 POP       @SP(  2) memory[EA = 0X0564 = memory[0XFFF6]] = 0X0010
0464 FFF2 0010 0564  0001 SWAP      0X0564 <--> 0X0010
0465 FFF2 0564 0010  0001 DISCARD   #1 words from top-of-stack
0468 FFF4 0010 0001  FFFF DISCARD   #1 words from top-of-stack
046B FFF6 0001 FFFF  0526 PUSHA     SB( 33) memory[EA = 0X0566]
046F FFF4 0566 0001  FFFF PUSH      SB( 33) memory[EA = 0X0566] = 0XFFF7
0473 FFF2 FFF7 0566  0001 PUSH      #memory[EA = 0X0475] = 0X0003
0477 FFF0 0003 FFF7  0566 SUBI      0XFFF4 = 0XFFF7 - 0X0003
0478 FFF2 FFF4 0566  0001 MAKEDUP   duplicate 0XFFF4
0479 FFF0 FFF4 FFF4  0566 POP       @SP(  2) memory[EA = 0X0566 = memory[0XFFF6]] = 0XFFF4
047D FFF2 FFF4 0566  0001 SWAP      0X0566 <--> 0XFFF4
047E FFF2 0566 FFF4  0001 DISCARD   #1 words from top-of-stack
0481 FFF4 FFF4 0001  FFFF DISCARD   #1 words from top-of-stack
0484 FFF6 0001 FFFF  0526 SWAP      0XFFFF <--> 0X0001
0485 FFF6 FFFF 0001  0526 MAKEDUP   duplicate 0XFFFF
0486 FFF4 FFFF FFFF  0001 PUSH      @SP(  3) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0003
048A FFF2 0003 FFFF  FFFF ADDI      0X0002 = 0XFFFF + 0X0003
048B FFF4 0002 FFFF  0001 POP       @SP(  3) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0002
048F FFF6 FFFF 0001  0526 JMP       0X0379
0379 FFF6 FFFF 0001  0526 SETNZPI   TOS = 0XFFFF NZP = 100
037A FFF6 FFFF 0001  0526 JMPN      0X038B NZP = 100
038B FFF6 FFFF 0001  0526 SWAP      0X0001 <--> 0XFFFF
038C FFF6 0001 FFFF  0526 MAKEDUP   duplicate 0X0001
038D FFF4 0001 0001  FFFF PUSH      @SP(  3) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0002
0391 FFF2 0002 0001  0001 SWAP      0X0001 <--> 0X0002
0392 FFF2 0001 0002  0001 CMPI      0X0002 ? 0X0001 LEG = 001
0393 FFF6 0001 FFFF  0526 JMPGE     0X0399 LEG = 001
0399 FFF6 0001 FFFF  0526 PUSH      SB(  1) memory[EA = 0X0526] = 0X0002
039D FFF4 0002 0001  FFFF SVC       #11 write integer
03A0 FFF6 0001 FFFF  0526 PUSHA     SB(119) memory[EA = 0X0612]
03A4 FFF4 0612 0001  FFFF SVC       #51 write string
03A7 FFF6 0001 FFFF  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X0010
03AB FFF4 0010 0001  FFFF PUSH      SB( 33) memory[EA = 0X0566] = 0XFFF4
03AF FFF2 FFF4 0010  0001 CMPI      0X0010 ? 0XFFF4 LEG = 001
03B0 FFF6 0001 FFFF  0526 JMPL      0X03BA LEG = 001
03B3 FFF6 0001 FFFF  0526 PUSH      #memory[EA = 0X03B5] = 0X0000
03B7 FFF4 0000 0001  FFFF JMP       0X03BE
03BE FFF4 0000 0001  FFFF SETT      T = 0
03BF FFF4 0000 0001  FFFF DISCARD   #1 words from top-of-stack
03C2 FFF6 0001 FFFF  0526 JMPNT     0X03E0 T = 0
03E0 FFF6 0001 FFFF  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X0010
03E4 FFF4 0010 0001  FFFF PUSH      SB( 33) memory[EA = 0X0566] = 0XFFF4
03E8 FFF2 FFF4 0010  0001 CMPI      0X0010 ? 0XFFF4 LEG = 001
03E9 FFF6 0001 FFFF  0526 JMPE      0X03F3 LEG = 001
03EC FFF6 0001 FFFF  0526 PUSH      #memory[EA = 0X03EE] = 0X0000
03F0 FFF4 0000 0001  FFFF JMP       0X03F7
03F7 FFF4 0000 0001  FFFF SETT      T = 0
03F8 FFF4 0000 0001  FFFF DISCARD   #1 words from top-of-stack
03FB FFF6 0001 FFFF  0526 JMPNT     0X0419 T = 0
0419 FFF6 0001 FFFF  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X0010
041D FFF4 0010 0001  FFFF PUSH      SB( 33) memory[EA = 0X0566] = 0XFFF4
0421 FFF2 FFF4 0010  0001 CMPI      0X0010 ? 0XFFF4 LEG = 001
0422 FFF6 0001 FFFF  0526 JMPG      0X042C LEG = 001
042C FFF6 0001 FFFF  0526 PUSH      #memory[EA = 0X042E] = 0XFFFF
0430 FFF4 FFFF 0001  FFFF SETT      T = 1
0431 FFF4 FFFF 0001  FFFF DISCARD   #1 words from top-of-stack
0434 FFF6 0001 FFFF  0526 JMPNT     0X0452 T = 1
0437 FFF6 0001 FFFF  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X0010
043B FFF4 0010 0001  FFFF SVC       #11 write integer
043E FFF6 0001 FFFF  0526 PUSHA     SB(133) memory[EA = 0X062E]
0442 FFF4 062E 0001  FFFF SVC       #51 write string
0445 FFF6 0001 FFFF  0526 PUSH      SB( 33) memory[EA = 0X0566] = 0XFFF4
0449 FFF4 FFF4 0001  FFFF SVC       #11 write integer
2: 16 > -12
044C FFF6 0001 FFFF  0526 SVC       #42 write ENDL
044F FFF6 0001 FFFF  0526 JMP       0X0452
0452 FFF6 0001 FFFF  0526 PUSHA     SB( 32) memory[EA = 0X0564]
0456 FFF4 0564 0001  FFFF PUSH      SB( 32) memory[EA = 0X0564] = 0X0010
045A FFF2 0010 0564  0001 PUSH      #memory[EA = 0X045C] = 0X0003
045E FFF0 0003 0010  0564 ADDI      0X0013 = 0X0010 + 0X0003
045F FFF2 0013 0564  0001 MAKEDUP   duplicate 0X0013
0460 FFF0 0013 0013  0564 POP       @SP(  2) memory[EA = 0X0564 = memory[0XFFF6]] = 0X0013
0464 FFF2 0013 0564  0001 SWAP      0X0564 <--> 0X0013
0465 FFF2 0564 0013  0001 DISCARD   #1 words from top-of-stack
0468 FFF4 0013 0001  FFFF DISCARD   #1 words from top-of-stack
046B FFF6 0001 FFFF  0526 PUSHA     SB( 33) memory[EA = 0X0566]
046F FFF4 0566 0001  FFFF PUSH      SB( 33) memory[EA = 0X0566] = 0XFFF4
0473 FFF2 FFF4 0566  0001 PUSH      #memory[EA = 0X0475] = 0X0003
0477 FFF0 0003 FFF4  0566 SUBI      0XFFF1 = 0XFFF4 - 0X0003
0478 FFF2 FFF1 0566  0001 MAKEDUP   duplicate 0XFFF1
0479 FFF0 FFF1 FFF1  0566 POP       @SP(  2) memory[EA = 0X0566 = memory[0XFFF6]] = 0XFFF1
047D FFF2 FFF1 0566  0001 SWAP      0X0566 <--> 0XFFF1
047E FFF2 0566 FFF1  0001 DISCARD   #1 words from top-of-stack
0481 FFF4 FFF1 0001  FFFF DISCARD   #1 words from top-of-stack
0484 FFF6 0001 FFFF  0526 SWAP      0XFFFF <--> 0X0001
0485 FFF6 FFFF 0001  0526 MAKEDUP   duplicate 0XFFFF
0486 FFF4 FFFF FFFF  0001 PUSH      @SP(  3) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0002
048A FFF2 0002 FFFF  FFFF ADDI      0X0001 = 0XFFFF + 0X0002
048B FFF4 0001 FFFF  0001 POP       @SP(  3) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0001
048F FFF6 FFFF 0001  0526 JMP       0X0379
0379 FFF6 FFFF 0001  0526 SETNZPI   TOS = 0XFFFF NZP = 100
037A FFF6 FFFF 0001  0526 JMPN      0X038B NZP = 100
038B FFF6 FFFF 0001  0526 SWAP      0X0001 <--> 0XFFFF
038C FFF6 0001 FFFF  0526 MAKEDUP   duplicate 0X0001
038D FFF4 0001 0001  FFFF PUSH      @SP(  3) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0001
0391 FFF2 0001 0001  0001 SWAP      0X0001 <--> 0X0001
0392 FFF2 0001 0001  0001 CMPI      0X0001 ? 0X0001 LEG = 010
0393 FFF6 0001 FFFF  0526 JMPGE     0X0399 LEG = 010
0399 FFF6 0001 FFFF  0526 PUSH      SB(  1) memory[EA = 0X0526] = 0X0001
039D FFF4 0001 0001  FFFF SVC       #11 write integer
03A0 FFF6 0001 FFFF  0526 PUSHA     SB(119) memory[EA = 0X0612]
03A4 FFF4 0612 0001  FFFF SVC       #51 write string
03A7 FFF6 0001 FFFF  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X0013
03AB FFF4 0013 0001  FFFF PUSH      SB( 33) memory[EA = 0X0566] = 0XFFF1
03AF FFF2 FFF1 0013  0001 CMPI      0X0013 ? 0XFFF1 LEG = 001
03B0 FFF6 0001 FFFF  0526 JMPL      0X03BA LEG = 001
03B3 FFF6 0001 FFFF  0526 PUSH      #memory[EA = 0X03B5] = 0X0000
03B7 FFF4 0000 0001  FFFF JMP       0X03BE
03BE FFF4 0000 0001  FFFF SETT      T = 0
03BF FFF4 0000 0001  FFFF DISCARD   #1 words from top-of-stack
03C2 FFF6 0001 FFFF  0526 JMPNT     0X03E0 T = 0
03E0 FFF6 0001 FFFF  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X0013
03E4 FFF4 0013 0001  FFFF PUSH      SB( 33) memory[EA = 0X0566] = 0XFFF1
03E8 FFF2 FFF1 0013  0001 CMPI      0X0013 ? 0XFFF1 LEG = 001
03E9 FFF6 0001 FFFF  0526 JMPE      0X03F3 LEG = 001
03EC FFF6 0001 FFFF  0526 PUSH      #memory[EA = 0X03EE] = 0X0000
03F0 FFF4 0000 0001  FFFF JMP       0X03F7
03F7 FFF4 0000 0001  FFFF SETT      T = 0
03F8 FFF4 0000 0001  FFFF DISCARD   #1 words from top-of-stack
03FB FFF6 0001 FFFF  0526 JMPNT     0X0419 T = 0
0419 FFF6 0001 FFFF  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X0013
041D FFF4 0013 0001  FFFF PUSH      SB( 33) memory[EA = 0X0566] = 0XFFF1
0421 FFF2 FFF1 0013  0001 CMPI      0X0013 ? 0XFFF1 LEG = 001
0422 FFF6 0001 FFFF  0526 JMPG      0X042C LEG = 001
042C FFF6 0001 FFFF  0526 PUSH      #memory[EA = 0X042E] = 0XFFFF
0430 FFF4 FFFF 0001  FFFF SETT      T = 1
0431 FFF4 FFFF 0001  FFFF DISCARD   #1 words from top-of-stack
0434 FFF6 0001 FFFF  0526 JMPNT     0X0452 T = 1
0437 FFF6 0001 FFFF  0526 PUSH      SB( 32) memory[EA = 0X0564] = 0X0013
043B FFF4 0013 0001  FFFF SVC       #11 write integer
043E FFF6 0001 FFFF  0526 PUSHA     SB(133) memory[EA = 0X062E]
0442 FFF4 062E 0001  FFFF SVC       #51 write string
0445 FFF6 0001 FFFF  0526 PUSH      SB( 33) memory[EA = 0X0566] = 0XFFF1
0449 FFF4 FFF1 0001  FFFF SVC       #11 write integer
1: 19 > -15
044C FFF6 0001 FFFF  0526 SVC       #42 write ENDL
044F FFF6 0001 FFFF  0526 JMP       0X0452
0452 FFF6 0001 FFFF  0526 PUSHA     SB( 32) memory[EA = 0X0564]
0456 FFF4 0564 0001  FFFF PUSH      SB( 32) memory[EA = 0X0564] = 0X0013
045A FFF2 0013 0564  0001 PUSH      #memory[EA = 0X045C] = 0X0003
045E FFF0 0003 0013  0564 ADDI      0X0016 = 0X0013 + 0X0003
045F FFF2 0016 0564  0001 MAKEDUP   duplicate 0X0016
0460 FFF0 0016 0016  0564 POP       @SP(  2) memory[EA = 0X0564 = memory[0XFFF6]] = 0X0016
0464 FFF2 0016 0564  0001 SWAP      0X0564 <--> 0X0016
0465 FFF2 0564 0016  0001 DISCARD   #1 words from top-of-stack
0468 FFF4 0016 0001  FFFF DISCARD   #1 words from top-of-stack
046B FFF6 0001 FFFF  0526 PUSHA     SB( 33) memory[EA = 0X0566]
046F FFF4 0566 0001  FFFF PUSH      SB( 33) memory[EA = 0X0566] = 0XFFF1
0473 FFF2 FFF1 0566  0001 PUSH      #memory[EA = 0X0475] = 0X0003
0477 FFF0 0003 FFF1  0566 SUBI      0XFFEE = 0XFFF1 - 0X0003
0478 FFF2 FFEE 0566  0001 MAKEDUP   duplicate 0XFFEE
0479 FFF0 FFEE FFEE  0566 POP       @SP(  2) memory[EA = 0X0566 = memory[0XFFF6]] = 0XFFEE
047D FFF2 FFEE 0566  0001 SWAP      0X0566 <--> 0XFFEE
047E FFF2 0566 FFEE  0001 DISCARD   #1 words from top-of-stack
0481 FFF4 FFEE 0001  FFFF DISCARD   #1 words from top-of-stack
0484 FFF6 0001 FFFF  0526 SWAP      0XFFFF <--> 0X0001
0485 FFF6 FFFF 0001  0526 MAKEDUP   duplicate 0XFFFF
0486 FFF4 FFFF FFFF  0001 PUSH      @SP(  3) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0001
048A FFF2 0001 FFFF  FFFF ADDI      0X0000 = 0XFFFF + 0X0001
048B FFF4 0000 FFFF  0001 POP       @SP(  3) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0000
048F FFF6 FFFF 0001  0526 JMP       0X0379
0379 FFF6 FFFF 0001  0526 SETNZPI   TOS = 0XFFFF NZP = 100
037A FFF6 FFFF 0001  0526 JMPN      0X038B NZP = 100
038B FFF6 FFFF 0001  0526 SWAP      0X0001 <--> 0XFFFF
038C FFF6 0001 FFFF  0526 MAKEDUP   duplicate 0X0001
038D FFF4 0001 0001  FFFF PUSH      @SP(  3) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0000
0391 FFF2 0000 0001  0001 SWAP      0X0001 <--> 0X0000
0392 FFF2 0001 0000  0001 CMPI      0X0000 ? 0X0001 LEG = 100
0393 FFF6 0001 FFFF  0526 JMPGE     0X0399 LEG = 100
0396 FFF6 0001 FFFF  0526 JMP       0X0492
0492 FFF6 0001 FFFF  0526 DISCARD   #3 words from top-of-stack
0495 FFFC 001B            PUSHA     SB(138) memory[EA = 0X0638]
0499 FFFA 0638 001B       SVC       #51 write string
For-loop (4)
049C FFFC 001B            SVC       #42 write ENDL
049F FFFC 001B            PUSHA     SB(  1) memory[EA = 0X0526]
04A3 FFFA 0526 001B       PUSH      #memory[EA = 0X04A5] = 0X0001
04A7 FFF8 0001 0526  001B POP       @SP(  1) memory[EA = 0X0526 = memory[0XFFFC]] = 0X0001
04AB FFFA 0526 001B       PUSH      SB( 31) memory[EA = 0X0562] = 0X0007
04AF FFF8 0007 0526  001B PUSH      #memory[EA = 0X04B1] = 0X0001
04B3 FFF6 0001 0007  0526 PUSH      #memory[EA = 0X04B5] = 0X0001
04B7 FFF4 0001 0001  0007 SUBI      0X0000 = 0X0001 - 0X0001
04B8 FFF6 0000 0007  0526 SETNZPI   TOS = 0X0000 NZP = 010
04B9 FFF6 0000 0007  0526 JMPNZ     0X04C7 NZP = 010
04BC FFF6 0000 0007  0526 PUSH      #memory[EA = 0X04BE] = 0X003F
04C0 FFF4 003F 0000  0007 PUSH      #memory[EA = 0X04C2] = 0X0002
04C4 FFF2 0002 003F  0000 JMP       0X0503

0503 FFF2 0002 003F  0000 SVC       #42 write ENDL
0506 FFF2 0002 003F  0000 PUSHA     SB(165) memory[EA = 0X066E]
050A FFF0 066E 0002  003F SVC       #51 write string
050D FFF2 0002 003F  0000 SVC       #11 write integer
0510 FFF4 003F 0000  0007 PUSHA     SB(183) memory[EA = 0X0692]
0514 FFF2 0692 003F  0000 SVC       #51 write string
0517 FFF4 003F 0000  0007 SVC       #11 write integer
Run-time error #2 near line #63
051A FFF6 0000 0007  0526 SVC       #42 write ENDL
051D FFF6 0000 0007  0526 PUSH      #memory[EA = 0X051F] = 0X0001
0521 FFF4 0001 0000  0007 SVC       #1 terminate program with status 1, SP = 0XFFF6

