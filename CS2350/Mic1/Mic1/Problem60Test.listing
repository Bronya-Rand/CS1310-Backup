Page   1  Problem60Test.mic1

        LC  Object        Line  Source Line
----------  ------------  ----  -------------------------------------------------------------
0X00000000                   1  ; Problem #60, Problem #3
0X00000000                   2  ;----------------------------------------------------------
0X00000000                   3  ; INPUT "x? " x
0X00000000  010000014D00     4                     PUSH      #message1
0X00000006  3F00000006       5                     SVC       #6
0X0000000B  020000016701     6                     PUSHA     x
0X00000011  3F00000002       7                     SVC       #2
0X00000016  0400000002       8                     DISCARD   #2
0X0000001B                   9  
0X0000001B                  10  ; INPUT "y? " y
0X0000001B  010000015100    11                     PUSH      #message2
0X00000021  3F00000006      12                     SVC       #6
0X00000026  020000016B01    13                     PUSHA     y
0X0000002C  3F00000002      14                     SVC       #2
0X00000031  0400000002      15                     DISCARD   #2
0X00000036                  16  
0X00000036                  17  ; POWER := 1
0X00000036  010000000100    18                     PUSH      #1
0X0000003C  030000016301    19                     POP       power
0X00000042                  20  
0X00000042                  21  ; for i in range ([0, y))
0X00000042  010000000000    22                     PUSH     #0 ; i = 0
0X00000048  030000017701    23                     POP      i 
0X0000004E  00              24  forloop1           NOOP
0X0000004F  010000017701    25                     PUSH     i
0X00000055  010000016B01    26                     PUSH     y
0X0000005B  16              27                     CMP
0X0000005C  3500000127      28                     JMPGE    endfor1
0X00000061                  29  
0X00000061  010000016701    30                     PUSH      x
0X00000067  030000016F01    31                     POP       A
0X0000006D                  32  
0X0000006D  010000016301    33                     PUSH      power
0X00000073  030000017301    34                     POP       B
0X00000079                  35                     
0X00000079                  36  ;   IF A < 0       
0X00000079  010000016F01    37                     PUSH      A
0X0000007F  010000000000    38                     PUSH      #0
0X00000085  16              39                     CMP
0X00000086  35000000A5      40                     JMPGE     endif1
0X0000008B                  41                     
0X0000008B  010000016F01    42                     PUSH     A
0X00000091  12              43                     NEG
0X00000092  030000016F01    44                     POP      A
0X00000098                  45  
0X00000098  010000017301    46                     PUSH     B
0X0000009E  12              47                     NEG
0X0000009F  030000017301    48                     POP      B
0X000000A5                  49  
0X000000A5  00              50  endif1             NOOP
0X000000A6  010000015F01    51                     PUSH     product
0X000000AC  010000000000    52                     PUSH     #0
0X000000B2  030000015F01    53                     POP      product
0X000000B8                  54  
0X000000B8                  55  ;   for j in range ([0, A))
0X000000B8  010000000000    56                     PUSH     #0 ; i = 0
Page   2  Problem60Test.mic1

        LC  Object        Line  Source Line
----------  ------------  ----  -------------------------------------------------------------
0X000000BE  030000017B01    57                     POP      j
0X000000C4  00              58  forloop2           NOOP
0X000000C5  010000017B01    59                     PUSH     j
0X000000CB  010000016F01    60                     PUSH     A
0X000000D1  16              61                     CMP
0X000000D2  3500000102      62                     JMPGE    endfor2
0X000000D7                  63  
0X000000D7  010000015F01    64                     PUSH     product
0X000000DD  010000017301    65                     PUSH     B
0X000000E3  10              66                     ADD
0X000000E4  030000015F01    67                     POP      product
0X000000EA                  68  
0X000000EA  010000017B01    69                     PUSH     j
0X000000F0  010000000100    70                     PUSH     #1
0X000000F6  10              71                     ADD
0X000000F7  030000017B01    72                     POP      j
0X000000FD  30000000C4      73                     JMP      forloop2
0X00000102                  74  
0X00000102  00              75  endfor2            NOOP
0X00000103  010000015F01    76                     PUSH     product
0X00000109  030000016301    77                     POP      power
0X0000010F                  78  
0X0000010F  010000017701    79                     PUSH     i
0X00000115  010000000100    80                     PUSH     #1
0X0000011B  10              81                     ADD
0X0000011C  030000017701    82                     POP      i
0X00000122  300000004E      83                     JMP      forloop1
0X00000127                  84  ; END
0X00000127  00              85  endfor1            NOOP
0X00000128  010000015500    86                     PUSH     #message3
0X0000012E  3F00000006      87                     SVC      #6
0X00000133  0400000001      88                     DISCARD  #1
0X00000138  010000016301    89                     PUSH     power
0X0000013E  3F00000003      90                     SVC      #3
0X00000143  0400000001      91                     DISCARD  #1
0X00000148                  92  ; STOP
0X00000148  3F00000001      93                     SVC       #1
0X0000014D                  94  
0X0000014D  783F2000        95  message1           DS        "x? "
0X00000151  793F2000        96  message2           DS        "y? "
0X00000155  78202A2A2079    97  message3           DS        "x ** y = "
0X0000015B  203D2000    
0X0000015F                  98  product            RW
0X00000163                  99  power              RW    
0X00000167                 100  x                  RW
0X0000016B                 101  y                  RW
0X0000016F                 102  A                  RW
0X00000173                 103  B                  RW
0X00000177                 104  i                  RW
0X0000017B                 105  j                  RW
